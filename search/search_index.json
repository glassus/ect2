{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Accueil","text":""},{"location":"#1-seances-de-travaux-diriges","title":"1. S\u00e9ances de Travaux Dirig\u00e9s","text":"<p> S\u00e9ance en cours </p> <ul> <li> TD01 : r\u00e9vision des structures \u00e9l\u00e9mentaires</li> </ul>"},{"location":"#2-linformatique-en-ect","title":"2. L'informatique en ECT","text":"<ul> <li> <p>Vous pouvez retrouver ici la partie informatique du programme de math\u00e9matiques des deux ann\u00e9es d'ECT.</p> </li> <li> <p>Vous pouvez retrouver ici un rappel de toutes les commandes Python exigibles au concours.</p> </li> </ul>"},{"location":"#3-python-en-ligne-sans-installation","title":"3. Python en ligne sans installation","text":"<p>Vous pouvez utiliser l'excellente solution Basthon :</p> <p></p>"},{"location":"CoursSQL/langage_SQL/","title":"Langage SQL","text":""},{"location":"CoursSQL/langage_SQL/#0-du-modele-relationnel-au-sgbd","title":"0. Du mod\u00e8le relationnel au SGBD","text":"<p>Les consid\u00e9rations sur le mod\u00e8le relationnel traitaient plut\u00f4t de la structure math\u00e9matique des donn\u00e9es. </p> <p>Il s'agissait de d\u00e9terminer la meilleure structure pour repr\u00e9senter les donn\u00e9es et les relations qui les lient. </p> <p>Il convient maintenant d'aborder la partie logicielle : les SGBD (Syst\u00e8mes de Gestion de Bases de Donn\u00e9es).</p> <p>Les SGBD jouent le r\u00f4le d'interface entre l'\u00eatre humain et la base de donn\u00e9es. Par l'interm\u00e9diaire de requ\u00eates, l'utilisateur va consulter ou modifier la base de donn\u00e9es. Le SGBD est garant de l'int\u00e9grit\u00e9 de cette base, et pr\u00e9vient notamment que les modifications (souvent appel\u00e9es transactions) ne soient pas pr\u00e9judiciables \u00e0 la base de donn\u00e9es.</p> <p>Le langage utilis\u00e9 pour communiquer avec le SGBD est le langage SQL, pour Structured  Query Langage (pour langage de requ\u00eates structur\u00e9es).</p> <p>Les SGBD les plus utilis\u00e9s sont bas\u00e9s sur le mod\u00e8le relationnel. Parmi eux, citons Oracle, MySQL, Microsoft SQL Server, PostgreSQL, Microsoft Access, SQLite, MariaDB...</p> <p>Mais de plus en plus de SGBD non-relationnels sont utilis\u00e9s, sp\u00e9cialement adapt\u00e9s \u00e0 des donn\u00e9es plus diverses et moins structur\u00e9es. On les retrouve sous l'appelation NoSQL  (pour Not only SQL). Citons parmi eux MongoDB, Cassandra (Facebook), BigTable (Google)...</p>"},{"location":"CoursSQL/langage_SQL/#1-introduction-au-langage-sql","title":"1. Introduction au langage SQL","text":"<p>Dans toute la suite, nous allons travailler avec la base de donn\u00e9es <code>livres.db</code>.</p>"},{"location":"CoursSQL/langage_SQL/#10-differents-moyens-dinterroger-la-base-de-donnees","title":"1.0 Diff\u00e9rents moyens d'interroger la base de donn\u00e9es","text":"<p>Pr\u00e9-requis : t\u00e9l\u00e9chargez la base de donn\u00e9es livres.db.</p> 1. En ligne avec <code>sqliteonline.com</code> <ul> <li>Rendez vous sur https://sqliteonline.com/</li> <li>Par File / OpenDB, ouvrez le fichier  <code>livres.db</code> pr\u00e9c\u00e9demment t\u00e9l\u00e9charg\u00e9.</li> <li>\u00c9crivez votre requ\u00eate plus cliquez sur Run. </li> </ul> <p>2. Directement sur ce site</p> <ul> <li>Rendez vous sur la page SQL en ligne </li> <li>\u00c9crivez la requ\u00eate dans le champ pr\u00e9vu pour votre base.</li> </ul> <p>Dans toute la suite, les manipulations sont \u00e0 faire en interrogeant la base de donn\u00e9es <code>livres.db</code>, avec l'une des m\u00e9thodes indiqu\u00e9es ci-dessus.</p> <p>Voici le diagramme relationnel de cette base : </p> <ul> <li>les cl\u00e9s primaires sont en bleu (suivi d'une icone de cl\u00e9)</li> <li>les cl\u00e9s \u00e9trang\u00e8res sont en noir et reli\u00e9es \u00e0 leur cl\u00e9 primaire.</li> </ul>"},{"location":"CoursSQL/langage_SQL/#11-selection-de-donnees","title":"1.1. S\u00e9lection de donn\u00e9es","text":""},{"location":"CoursSQL/langage_SQL/#110-exemple-0","title":"1.1.0 Exemple 0","text":"<p>Requ\u00eate basique : SELECT, FROM </p> <ul> <li>Commande : <pre><code>SELECT titre FROM livre ;\n</code></pre></li> <li>Traduction : </li> </ul> <p>On veut tous les titres de la table \u00ablivre\u00bb.</p> <ul> <li>R\u00e9sultat : </li> </ul> <p></p> <p>Remarques </p> <ul> <li> <p>Les mots-cl\u00e9s SQL sont traditionnellement \u00e9crits en MAJUSCULES.  </p> </li> <li> <p>Le <code>;</code> signale la fin de l'instruction. Il peut donc \u00eatre omis s'il n'y a pas d'instructions encha\u00een\u00e9es (ce qui sera toujours notre cas).  </p> </li> <li> <p>L'indentation n'est pas syntaxique (pas comme en Python). On peut faire des retours \u00e0 la ligne et des indentations pour rendre le code plus lisible.</p> </li> </ul>"},{"location":"CoursSQL/langage_SQL/#111-exemple-1","title":"1.1.1 Exemple 1","text":"<p>Requ\u00eate filtr\u00e9e : SELECT, FROM, WHERE </p> <ul> <li>Commande : <pre><code>SELECT titre FROM livre WHERE annee &gt;= 1990;\n</code></pre></li> <li>Traduction : </li> </ul> <p>On veut les titres de la table \u00ablivre\u00bb qui sont parus apr\u00e8s (ou en ) 1990;</p> <ul> <li>R\u00e9sultat : </li> </ul> <p></p> <p>Le mot-cl\u00e9 WHERE doit \u00eatre suivi d'un bool\u00e9en. Les op\u00e9rateurs classiques <code>=</code> , <code>!=</code>, <code>&gt;</code>, <code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code> peuvent \u00eatre utilis\u00e9s, mais aussi le mot-cl\u00e9 IN :</p>"},{"location":"CoursSQL/langage_SQL/#111bis-exemple-1bis","title":"1.1.1bis Exemple 1bis","text":"<p>Requ\u00eate avec plusieurs possibilit\u00e9s : WHERE ... IN... </p> <ul> <li>Commande : <pre><code>SELECT titre FROM livre WHERE annee IN (1990, 1991, 1992);\n</code></pre></li> <li>Traduction : </li> </ul> <p>On veut les titres de la table \u00ablivre\u00bb qui sont parus en 1990, 1991 ou 1992.</p> <ul> <li>R\u00e9sultat : </li> </ul> <p></p>"},{"location":"CoursSQL/langage_SQL/#112-exemple-2","title":"1.1.2 Exemple 2","text":"<p>Requ\u00eate avec bool\u00e9ens : AND - OR </p> <ul> <li>Commande : <pre><code>SELECT titre FROM livre WHERE   annee &gt;= 1970 AND\nannee &lt;= 1980 AND\nediteur = 'Dargaud';\n</code></pre></li> <li>Traduction : </li> </ul> <p>On veut les titres de la table \u00ablivre\u00bb qui sont parus entre 1970 et 1980 chez l'\u00e9diteur Dargaud;</p> <ul> <li>R\u00e9sultat : </li> </ul> <p></p>"},{"location":"CoursSQL/langage_SQL/#113-exemple-3","title":"1.1.3 Exemple 3","text":"<p>Requ\u00eate approch\u00e9e : LIKE </p> <ul> <li>Commande : <pre><code>SELECT titre FROM livre WHERE titre LIKE '%Ast\u00e9rix%';\n</code></pre></li> <li>Traduction : </li> </ul> <p>On veut les titres de la table \u00ablivre\u00bb dont le titre contient la cha\u00eene de caract\u00e8res \"Ast\u00e9rix\". Le symbole <code>%</code> est un joker qui peut symboliser n'importe quelle cha\u00eene de caract\u00e8res. </p> <ul> <li>R\u00e9sultat : </li> </ul> <p></p>"},{"location":"CoursSQL/langage_SQL/#114-exemple-4","title":"1.1.4 Exemple 4","text":"<p>Plusieurs colonnes </p> <ul> <li>Commande : <pre><code>SELECT titre, isbn FROM livre WHERE annee &gt;= 1990;\n</code></pre></li> <li>Traduction : </li> </ul> <p>On veut les titres et les ISBN de la table \u00ablivre\u00bb qui sont parus apr\u00e8s 1990.</p> <ul> <li>R\u00e9sultat : </li> </ul> <p></p>"},{"location":"CoursSQL/langage_SQL/#115-exemple-5","title":"1.1.5 Exemple 5","text":"<p>Toutes les colonnes : * </p> <ul> <li>Commande : <pre><code>SELECT * FROM livre WHERE annee &gt;= 1990;\n</code></pre></li> <li>Traduction : </li> </ul> <p>On veut toutes les colonnes disponibles de la table \u00ablivre\u00bb pour les livres qui sont parus apr\u00e8s 1990. L'ast\u00e9risque <code>*</code> est un joker (wildcard en anglais).</p> <ul> <li>R\u00e9sultat : </li> </ul> <p></p>"},{"location":"CoursSQL/langage_SQL/#116-exemple-6","title":"1.1.6 Exemple 6","text":"<p>Renommer les colonnes : AS </p> <ul> <li>Commande : <pre><code>SELECT titre AS titre_du_livre FROM livre WHERE annee &gt;= 1990;\n</code></pre></li> <li>Traduction : </li> </ul> <p>Lors de l'affichage du r\u00e9sulats et dans la suite de la requ\u00eate (important), la colonne \"titre\" est renomm\u00e9e \"titre_du_livre\".</p> <ul> <li>R\u00e9sultat : </li> </ul> <p></p> <p>Remarque L'alias <code>AS</code> sera souvent utilis\u00e9 pour raccourcir un nom, notamment lors des jointures de plusieurs tables (voir plus loin).</p>"},{"location":"CoursSQL/langage_SQL/#12-operations-sur-les-donnees-selection-avec-agregation-non-exigible","title":"1.2. Op\u00e9rations sur les donn\u00e9es : s\u00e9lection avec agr\u00e9gation (non exigible)","text":"<p>Les requ\u00eates effectu\u00e9es jusqu'ici ont juste s\u00e9lectionn\u00e9 des donn\u00e9es gr\u00e2ce \u00e0 diff\u00e9rents filtres : aucune action \u00e0 partir de ces donn\u00e9es n'a \u00e9t\u00e9 effectu\u00e9e. Nous allons maintenant effectuer des op\u00e9rations \u00e0 partir des donn\u00e9es s\u00e9lectionn\u00e9es. On appelle ces op\u00e9rations des op\u00e9rations d'agr\u00e9gation.</p>"},{"location":"CoursSQL/langage_SQL/#121-exemple-7","title":"1.2.1 Exemple 7","text":"<p>Compter : COUNT </p> <ul> <li>Commande : <pre><code>SELECT COUNT(*) AS total FROM livre\nWHERE titre LIKE \"%Ast\u00e9rix%\";\n</code></pre></li> <li>Traduction : </li> </ul> <p>On veut compter le nombre d'enregistrements de la tables livres comportant le mot \"Ast\u00e9rix\". Le r\u00e9sultat sera le seul \u00e9l\u00e9ment d'une colonne nomm\u00e9e \u00abtotal\u00bb.</p> <ul> <li>R\u00e9sultat : </li> </ul> <p></p>"},{"location":"CoursSQL/langage_SQL/#122-exemple-8","title":"1.2.2 Exemple 8","text":"<p>Additionner : SUM </p> <ul> <li>Commande : <pre><code>SELECT SUM(annee) AS somme FROM livre\nWHERE titre LIKE \"%Ast\u00e9rix%\";\n</code></pre></li> <li>Traduction : </li> </ul> <p>On veut additionner les ann\u00e9es des livres de la tables livres comportant le mot \"Ast\u00e9rix\". Le r\u00e9sultat sera le seul \u00e9l\u00e9ment d'une colonne nomm\u00e9e \u00absomme\u00bb. Attention : dans notre cas pr\u00e9cis, ce calcul n'a aucun sens...</p> <ul> <li>R\u00e9sultat : </li> </ul> <p></p>"},{"location":"CoursSQL/langage_SQL/#123-exemple-9","title":"1.2.3 Exemple 9","text":"<p>Faire une moyenne : AVG </p> <ul> <li>Commande : <pre><code>SELECT AVG(annee) AS moyenne FROM livre\nWHERE titre LIKE \"%Ast\u00e9rix%\";\n</code></pre></li> <li>Traduction : </li> </ul> <p>On veut calculer la moyenne des ann\u00e9es de parution des livres de la table livres comportant le mot \"Ast\u00e9rix\". Le r\u00e9sultat sera le seul \u00e9l\u00e9ment d'une colonne nomm\u00e9e \u00abmoyenne\u00bb. Attention : l\u00e0 encore, ce calcul n'a aucun sens...</p> <ul> <li>R\u00e9sultat : </li> </ul> <p></p>"},{"location":"CoursSQL/langage_SQL/#124-exemple-10","title":"1.2.4 Exemple 10","text":"<p>Trouver les extremums : MIN, MAX </p> <ul> <li>Commande : <pre><code>SELECT MIN(annee) AS minimum FROM livre\nWHERE titre LIKE \"%Ast\u00e9rix%\";\n</code></pre></li> <li>Traduction : </li> </ul> <p>On veut trouver la plus petite valeur de la colonne \u00abannee\u00bb parmi les livres de la tables livre comportant le mot \"Ast\u00e9rix\". Le r\u00e9sultat sera le seul \u00e9l\u00e9ment d'une colonne nomm\u00e9e minimum. Le fonctionnement est identique avec MAX pour la recherche du maximum.</p> <ul> <li>R\u00e9sultat : </li> </ul> <p></p>"},{"location":"CoursSQL/langage_SQL/#125-exemple-11","title":"1.2.5 Exemple 11","text":"<p>Classer des valeurs : ORDER BY, ASC, DESC, LIMIT </p> <ul> <li> <p>Commande : <pre><code>SELECT titre, annee FROM livre\nWHERE titre LIKE \"%Ast\u00e9rix%\"\nORDER BY annee DESC;\n</code></pre></p> </li> <li> <p>Traduction : </p> </li> </ul> <p>On veut afficher tous les albums d'Ast\u00e9rix, et leur ann\u00e9e de parution, class\u00e9s par ann\u00e9e d\u00e9croissante.</p> <ul> <li>R\u00e9sultat : </li> </ul> <p></p> <ul> <li> <p>Comportement par d\u00e9faut : Si le param\u00e8tre ASC ou DESC est omis, le classement se fait par ordre croissant (donc ASC est le param\u00e8tre par d\u00e9faut).</p> </li> <li> <p>Utilisation de LIMIT : Le mot-cl\u00e9 LIMIT (suivi d'un nombre) permet de limiter le nombre de r\u00e9sultats affich\u00e9s. Ainsi la requ\u00eate <pre><code>SELECT titre, annee FROM livre\nWHERE titre LIKE \"%Ast\u00e9rix%\"\nORDER BY annee DESC\nLIMIT 1;\n</code></pre> permet d'obtenir les renseignements sur l'Ast\u00e9rix le plus r\u00e9cent.                    </p> </li> </ul>"},{"location":"CoursSQL/langage_SQL/#125-exemple-12","title":"1.2.5 Exemple 12","text":"<p>Suppression des doublons : DISTINCT </p> <ul> <li>Commande : <pre><code>SELECT DISTINCT editeur FROM livre;\n</code></pre></li> <li>Traduction : </li> </ul> <p>On veut la liste de tous les \u00e9diteurs. Sans le mot-cl\u00e9 <code>DISTINCT</code>, beaucoup de doublons appara\u00eetraient.</p> <ul> <li>R\u00e9sultat : </li> </ul> <p></p>"},{"location":"CoursSQL/langage_SQL/#13-des-recherches-croisees-sur-les-tables-les-jointures","title":"1.3 Des recherches crois\u00e9es sur les tables : les jointures","text":"<p>Observons le contenu de la table \u00abemprunt\u00bb :</p> <p><pre><code>SELECT * FROM emprunt;\n</code></pre> </p> <p>Le contenu est peu lisible : qui a emprunt\u00e9 quel livre ? Souvenons-nous du diagramme de la base de donn\u00e9es.</p> <p></p> <p>Pour que la table \u00abemprunt\u00bb soit lisible, il faudrait (dans un premier temps) que l'on affiche \u00e0 la place de l'ISBN le titre de l'ouvrage. Or ce titre est disponible dans la table \u00ablivres\u00bb.  On va donc proc\u00e9der \u00e0 une jointure de ces deux tables.</p>"},{"location":"CoursSQL/langage_SQL/#131-exemple-13","title":"1.3.1 Exemple 13","text":"<p>Jointure de 2 tables : INNER JOIN </p> <ul> <li>Commande : <pre><code>SELECT livre.titre, emprunt.code_barre, emprunt.retour FROM emprunt\nINNER JOIN livre ON emprunt.isbn = livre.isbn;\n</code></pre></li> <li>Traduction :  Comme plusieurs tables sont appel\u00e9es, nous pr\u00e9fixons chaque colonne avec le nom de la table. Nous demandons ici l'affichage de la table \u00abemprunt\u00bb, mais o\u00f9 on aura remplac\u00e9 l'ISBN (peu lisible) par le titre du livre.</li> </ul> <p>Remarque : On peut aussi utiliser simplement JOIN \u00e0 la place d'INNER JOIN.</p> <p>L'expression  <pre><code>INNER JOIN livre ON emprunt.isbn = livre.isbn\n</code></pre> doit se comprendre comme ceci : on \u00abinvite\u00bb la table \u00ablivres\u00bb (dont on va afficher la colonne \u00abtitre\u00bb). La correspondance entre la table \u00ablivres\u00bb et la table \u00abemprunt\u00bb doit se faire sur l'attribut ISBN, qui est la cl\u00e9 primaire de \u00ablivres\u00bb et une cl\u00e9 \u00e9trang\u00e8re d'\u00abemprunts\u00bb. Il est donc tr\u00e8s important de sp\u00e9cifier ce sur quoi les deux tables vont se retrouver (ici, l'ISBN) </p> <p></p> <ul> <li>R\u00e9sultat : </li> </ul> <p></p>"},{"location":"CoursSQL/langage_SQL/#132-exemple-14","title":"1.3.2 Exemple 14","text":"<p>Le r\u00e9sultat pr\u00e9c\u00e9dent a permis d'am\u00e9liorer la visibilit\u00e9 de la table \u00abemprunt\u00bb, mais il reste la colonne \u00abcode_barre\u00bb qui est peu lisible. Nous pouvons la remplacer par le titre du livre, en faisant une nouvelle jointure, en invitant maintenant les deux tables \u00ablivre\u00bb et \u00abusager\u00bb.</p> <p>Jointure de 3 tables : INNER JOIN </p> <ul> <li>Commande : <pre><code>SELECT u.nom, u.prenom, l.titre, e.retour FROM emprunt AS e\nINNER JOIN livre AS l ON e.isbn = l.isbn\nINNER JOIN usager AS u ON e.code_barre = u.code_barre;\n</code></pre></li> <li> <p>Traduction :  Il faut bien comprendre que la table principale qui nous int\u00e9resse ici est \u00abemprunts\u00bb, mais qu'on modifie les valeurs affich\u00e9es en allant chercher des correspondances dans deux autres tables.  Notez ici que des alias sont donn\u00e9s aux tables (par AS) afin de faciliter l'\u00e9criture. </p> </li> <li> <p>R\u00e9sultat : </p> </li> </ul> <p></p>"},{"location":"CoursSQL/langage_SQL/#2-creation-et-modification-dune-base-de-donnees","title":"2. Cr\u00e9ation et modification d'une base de donn\u00e9es","text":"<p>L'objectif est de cr\u00e9er la table suivante :</p> id Nom Maths Anglais Histoire 1 Alice 16 11 17 2 Bob 12 15 10 3 Charles 9 11 18 <p>Pour cela vous pouvez travailler sur cette page.</p>"},{"location":"CoursSQL/langage_SQL/#21-exemple-15","title":"2.1 Exemple 15","text":"<p>Cr\u00e9ation d'une table : CREATE TABLE </p> <ul> <li>Commande : <pre><code>CREATE TABLE table_notes (\nId INTEGER PRIMARY KEY,\nNom TEXT,\nMaths INTEGER,\nAnglais INTEGER,\nHistoire INTEGER\n);\n</code></pre></li> <li> <p>Remarque : C'est l'utilisateur qui sp\u00e9cifie, \u00e9ventuellement, quel attribut sera une cl\u00e9 primaire.</p> </li> <li> <p>R\u00e9sultat : </p> </li> </ul>"},{"location":"CoursSQL/langage_SQL/#22-exemple-16","title":"2.2 Exemple 16","text":"<p>Insertion de valeurs : INSERT INTO, VALUES </p> <ul> <li> <p>Commande : <pre><code>INSERT INTO table_notes VALUES  (1, 'Alice', 16, 11, 17),\n(2, 'Bob', 12, 15, 10),\n(3, 'Charles', 9, 11, 18);\n</code></pre></p> </li> <li> <p>R\u00e9sultat : </p> </li> </ul> <p></p>"},{"location":"CoursSQL/langage_SQL/#23-exemple-17-interet-de-la-cle-primaire","title":"2.3 Exemple 17 : Int\u00e9r\u00eat de la cl\u00e9 primaire","text":"<p>Essayons d'ins\u00e9rer un 4\u00e8me enregistrement ayant le m\u00eame <code>id</code> qu'un autre \u00e9l\u00e8ve. </p> <ul> <li> <p>Commande : <pre><code>INSERT INTO table_notes VALUES  (3, 'Denis', 18, 10, 12);\n</code></pre></p> </li> <li> <p>R\u00e9sultat : La contrainte de relation est viol\u00e9e : le SGBD \u00abprot\u00e8ge\u00bb la base de donn\u00e9es en n'acceptant pas la proposition d'insertion. La base de donn\u00e9es n'est pas modifi\u00e9e. </p> </li> <li> <p>Remarque : Il est possible de \u00abd\u00e9l\u00e9guer\u00bb la gestion des valeurs de la cl\u00e9 primaire avec l'instruction <code>AUTOINCREMENT</code>.  La d\u00e9claration de la table et l'insertion des valeurs serait : <pre><code>CREATE TABLE table_notes (\nId INTEGER PRIMARY KEY AUTOINCREMENT,\nNom TEXT,\nMaths INTEGER,\nAnglais INTEGER,\nHistoire INTEGER\n);\n\nINSERT INTO Table_notes (Nom, Maths, Anglais, NSI) VALUES\n('Alice', 16, 11, 17),\n('Bob', 12, 15, 10),\n('Charles', 9, 11, 18);\n</code></pre> et le r\u00e9sultat serait : </p> </li> </ul> <p></p> <p>L'attribut <code>id</code> est donc g\u00e9r\u00e9 automatiquement par le SGBD.</p>"},{"location":"CoursSQL/langage_SQL/#24-exemple-18","title":"2.4 Exemple 18","text":"<p>Modification d'une valeur UPDATE, SET </p> <p>Pour modifier la note de Maths d'Alice :</p> <ul> <li>Commande : <pre><code>UPDATE Table_notes SET Maths = 18 WHERE Nom = 'Alice';\n</code></pre></li> </ul>"},{"location":"CoursSQL/langage_SQL/#25-exemple-19","title":"2.5 Exemple 19","text":"<p>Suppression d'un enregistrement : DELETE </p> <p>Pour supprimer totalement la ligne concernant Charles :</p> <ul> <li>Commande : <pre><code>DELETE FROM Table_notes WHERE Nom = 'Charles';\n</code></pre></li> </ul> <p>Si une autre table contient par exemple l'attribut <code>id</code>  comme cl\u00e9 \u00e9trang\u00e8re, et si l'<code>id</code>  de Charles fait partie de cette table, le SGBD refusera de supprimer cette ligne, afin de ne pas violer la contrainte de r\u00e9f\u00e9rence.</p>"},{"location":"CoursSQL/langage_SQL/#26-exemple-20","title":"2.6 Exemple 20","text":"<p>Suppression totale d'une table : DROP TABLE </p> <p>Pour supprimer totalement et d\u00e9fitivement la table :</p> <ul> <li>Commande : <pre><code>DROP TABLE Table_notes;\n</code></pre></li> </ul> <p>L\u00e0 encore, si une autre table est reli\u00e9e \u00e0 <code>Table_notes</code> par une cl\u00e9 \u00e9trang\u00e8re, la suppression sera bloqu\u00e9e par le SGBD.</p>"},{"location":"CoursSQL/modele_relationnel/","title":"Mod\u00e8le relationnel","text":"<p>Th\u00e9oris\u00e9 en 1970 par le Britannique Edgard J. Codd,  le mod\u00e8le relationnel est \u00e0 ce jour le mod\u00e8le de base de donn\u00e9es le plus utilis\u00e9, m\u00eame si l'\u00e8re actuelle du Big Data tend \u00e0 mettre en avant d'autres mod\u00e8les non relationnels.</p> <p>Les principes de base du mod\u00e8le relationnel</p> <ul> <li>Les donn\u00e9es sont regroup\u00e9es dans diff\u00e9rentes tables (qu'on appellera plut\u00f4t relations et qui donnent son nom au mod\u00e8le). Chaque relation contient des \u00e9l\u00e9ments directement en lien avec le sujet g\u00e9n\u00e9ral de la table.</li> <li>Autant que possible, des donn\u00e9es identiques ne doivent pas se trouver dans des tables diff\u00e9rentes : on \u00e9vite la redondance des donn\u00e9es.</li> <li>Les donn\u00e9es ne doivent pas contenir elles-m\u00eames d'autres donn\u00e9es : on parle d'atomicit\u00e9 des donn\u00e9es.</li> </ul> <p>Un mod\u00e8le relationnel est donc bas\u00e9 sur des... relations.</p>"},{"location":"CoursSQL/modele_relationnel/#1-premiere-relation","title":"1. Premi\u00e8re relation","text":"<p>Prenons l'exemple d'une biblioth\u00e8que dont la base de donn\u00e9es poss\u00e8de une relation \u00ablivres\u00bb : </p> <p>Vocabulaire  </p> <ul> <li>relation, ou table : c'est l'endroit o\u00f9 sont rang\u00e9es les donn\u00e9es. L'ordre des lignes (que l'on appelera des enregistrements) n'a pas d'importance.</li> <li>enregistrement, ou tuple, ou n-uplet, ou t-uplet, ou vecteur : cela correspond \u00e0 une ligne du tableau, et donc un ensemble de valeurs li\u00e9es entre elles : l'auteur \u00abEric VUILLARD\u00bb a bien \u00e9crit le livre \u00abL'Ordre du jour\u00bb.  Il est interdit que deux enregistrements soient totalement identiques.  Le nombre d'enregistrements d'une relation s'appelle son cardinal.</li> <li>attribut : c'est l'\u00e9quivalent d'une colonne. Il y a dans notre relation un attribut \u00abcode\u00bb, un attribut \u00abTitre\u00bb, etc.</li> <li>domaine : le domaine d\u00e9signe \u00able type\u00bb (au sens type <code>Int</code>, <code>Float</code>, <code>String</code>).     L'attribut \u00ab\u00c9diteur\u00bb est une cha\u00eene de caract\u00e8res, son domaine est donc <code>String</code>. Par contre l'attribut \u00abISBN\u00bb est un nombre de 13 chiffres, commen\u00e7ant manifestement par 978. Son domaine est donc <code>Int</code>.</li> <li>sch\u00e9ma  : le sch\u00e9ma d'une relation est le regroupement de tous les attributs et de leur domaine respectif. Ici notre sch\u00e9ma serait : <code>((Code, Entier), (Titre, Cha\u00eene de caract\u00e8res), (Auteur, Cha\u00eene de caract\u00e8res), (\u00c9diteur, Cha\u00eene de caract\u00e8res), (ISBN, Entier))</code> </li> </ul>"},{"location":"CoursSQL/modele_relationnel/#2-cle-primaire","title":"2. Cl\u00e9 Primaire","text":"<p>Cl\u00e9 primaire </p> <p>Une cl\u00e9 primaire (PRIMARY KEY) est un attribut (ou une r\u00e9union d'attributs) dont la connaissance suffit \u00e0 identifier avec certitude un unique enregistrement.</p> <p>Par exemple, la cl\u00e9 primaire de la relation des personnes n\u00e9es en France pourrait \u00eatre leur num\u00e9ro de S\u00e9curit\u00e9 Sociale.</p> <p>Observons, dans notre relation pr\u00e9c\u00e9dente, ce qui peut \u00eatre une cl\u00e9 primaire et ce qui ne peut pas l'\u00eatre.</p> <ul> <li>Titre : cet attribut pourrait jouer le r\u00f4le de cl\u00e9 primaire. En effet, notre table ne contient pas deux livres ayant le m\u00eame titre.</li> <li>Auteur : cet attribut pourrait jouer le r\u00f4le de cl\u00e9 primaire. En effet, notre table ne contient pas deux livres ayant le m\u00eame auteur.</li> <li>\u00c9diteur : cet attribut ne peut pas jouer le r\u00f4le de cl\u00e9 primaire. En effet, la donn\u00e9e de l'attribut \u00abActes Sud\u00bb renvoie vers 4 livres diff\u00e9rents.</li> <li>ISBN : (International Standard Book Number) cet attribut est un num\u00e9ro unique sp\u00e9cifique \u00e0 chaque livre : il peut jouer le r\u00f4le de cl\u00e9 primaire.</li> <li>Code : cet attribut pourrait jouer le r\u00f4le de cl\u00e9 primaire. En effet, notre table ne contient pas deux livres ayant le m\u00eame code.</li> </ul>"},{"location":"CoursSQL/modele_relationnel/#3-cle-etrangere","title":"3. Cl\u00e9 \u00c9trang\u00e8re","text":"<p>Ajoutons maintenant les relations ci-dessous :</p> <p>Relation \u00abEmprunts\u00bb </p> id_emprunteur date Nom Pr\u00e9nom titre auteur code 845 12/10/2020 DURAND Michel Au revoir l\u00e0-haut Pierre LEMAITRE 942 125 13/10/2020 MARTIN Jean Pas pleurer Lydie SALVAYRE 1023 125 13/10/2020 MARTIN Jean Boussole Mathias ENARD 486 <p>Relation \u00abEmprunteurs\u00bb </p> id_emprunteur Nom Pr\u00e9nom 129 DULAC Marcel 845 DURAND Michel 125 MARTIN Jean <p>L'attribut \u00abid_emprunteur\u00bb est une cl\u00e9 primaire de la relation \u00abEmprunteurs\u00bb.</p> <p>Notion de cl\u00e9 \u00e9trang\u00e8re </p> <p>Y-a-t-il une cl\u00e9 primaire dans la relation \u00abEmprunts\u00bb ? </p> <p>\u00abid_emprunteur\u00bb est bien une cl\u00e9 primaire (d'\u00abEmprunteurs\u00bb) mais ne peut pas \u00eatre une cl\u00e9 primaire d'\u00abEmprunts\u00bb, car une personne peut prendre plusieurs livres \u00e0 la fois : on dit que c'est une cl\u00e9 \u00e9trang\u00e8re. </p> <p>Cl\u00e9 \u00e9trang\u00e8re </p> <p>Une cl\u00e9 \u00e9trang\u00e8re (FOREIGN KEY) est une cl\u00e9 primaire d'une autre relation.</p> <p>\u00abcode\u00bb est aussi une cl\u00e9 \u00e9trang\u00e8re : c'est une cl\u00e9 primaire (de la relation \u00ablivres\u00bb) mais elle ne peut pas jouer le r\u00f4le de cl\u00e9 primaire pour la relation emprunt, car un m\u00eame livre pourra \u00eatre pris \u00e0 diff\u00e9rentes dates.</p>"},{"location":"CoursSQL/programme_officiel/","title":"Extraits du programme officiel","text":""},{"location":"CoursSQL/programme_officiel/#1-premiere-annee","title":"1. Premi\u00e8re ann\u00e9e","text":""},{"location":"CoursSQL/programme_officiel/#2-deuxieme-annee","title":"2. Deuxi\u00e8me ann\u00e9e","text":""},{"location":"CoursSQL/sqlenligne/","title":"Ex\u00e9cuter du SQL en ligne","text":""},{"location":"CoursSQL/sqlenligne/#1-base-de-donnees-livresdb","title":"1.  Base de donn\u00e9es <code>livres.db</code>","text":"Requ\u00eate : Ex\u00e9cuter"},{"location":"CoursSQL/sqlenligne/#2-votre-propre-base-de-donnees","title":"2. Votre propre base de donn\u00e9es","text":"<p>Vous pouvez cr\u00e9er des tables, des enregistrements, faire des requ\u00eates... :</p> Requ\u00eate : Ex\u00e9cuter Requ\u00eate : Ex\u00e9cuter Requ\u00eate : Ex\u00e9cuter"},{"location":"Memento_Python/commandes/","title":"Les commandes exigibles du programme officiel","text":""},{"location":"Memento_Python/commandes/#1-operateurs-arithmetiques-de-base","title":"1. Op\u00e9rateurs arithm\u00e9tiques de base","text":"Commande Signification Exemple Commentaires <code>+</code> addition <code>&gt;&gt;&gt; 5 + 2</code> <code>7</code> <code>-</code> soustraction <code>&gt;&gt;&gt; 5 - 2</code> <code>3</code> <code>*</code> multiplication <code>&gt;&gt;&gt; 5 * 2</code> <code>10</code> <code>/</code> division <code>&gt;&gt;&gt; 7 / 2</code> <code>3.5</code> <code>&gt;&gt;&gt; 10 / 2</code> <code>5.0</code> Attention, le nombre renvoy\u00e9 par cette division est toujours un nombre \u00e0 virgule. <code>**</code> puissance <code>&gt;&gt;&gt; 10 ** 3</code> <code>1000</code> Attention, ce n'est pas le symbole <code>^</code>."},{"location":"Memento_Python/commandes/#2-operateurs-logiques","title":"2. Op\u00e9rateurs logiques","text":"<p>Python poss\u00e8de deux mots-cl\u00e9s r\u00e9serv\u00e9s <code>True</code> et <code>False</code> (appel\u00e9s bool\u00e9ens).  </p> Commande Signification Exemple Commentaires <code>and</code> et <code>&gt;&gt;&gt; True and False</code> <code>False</code> <code>or</code> ou <code>&gt;&gt;&gt; True or False</code> <code>True</code> <code>not</code> n\u00e9gation <code>&gt;&gt;&gt; not(True)</code> <code>False</code>"},{"location":"Memento_Python/commandes/#3-operateurs-de-comparaison","title":"3. Op\u00e9rateurs de comparaison","text":"<p>Ces op\u00e9rateurs de comparaison renvoient syst\u00e9matiquement soit <code>True</code>, soit <code>False</code>.  </p> Commande Signification Exemple Commentaires <code>==</code> test d'\u00e9galit\u00e9 <code>&gt;&gt;&gt; 4 + 3 == 8 - 1</code> <code>True</code> Attention \u00e0 ne pas confondre avec le symbole <code>=</code>  qui ne sert qu'\u00e0 l'affectation <code>&gt;</code> test de sup\u00e9riorit\u00e9 <code>&gt;&gt;&gt; 4 &gt; 7</code> <code>False</code> <code>&gt;=</code> test de sup\u00e9riorit\u00e9 large <code>&gt;&gt;&gt; 7 &gt;= 7</code> <code>True</code> <code>&lt;</code> test d'inf\u00e9riorit\u00e9 <code>&gt;&gt;&gt; 4 &lt; 7</code> <code>True</code> <code>&lt;=</code> test d'inf\u00e9riorit\u00e9 large <code>&gt;&gt;&gt; 4 &lt;= 4</code> <code>True</code> <code>!=</code> test de diff\u00e9rence <code>&gt;&gt;&gt; 3 + 2 != 4</code> <code>True</code>"},{"location":"Memento_Python/commandes/#4-structures-de-controle","title":"4. Structures de contr\u00f4le","text":"Commande Signification Exemple Commentaires <code>nom = expression</code> affectation <code>&gt;&gt;&gt; a = 1 + 3</code> <code>&gt;&gt;&gt; a</code> <code>4</code> La 1\u00e8re  op\u00e9ration effectu\u00e9e est l'\u00e9valuation de la partie \u00e0 droite du <code>=</code>. <code>if</code> si <code>if age &gt;= 18:</code> <code>print(\"majeur\")</code> Attention aux <code>:</code> en fin de ligne, attention \u00e0 l'indentation sous le <code>if</code>. <code>else</code> sinon <code>if age &gt;= 18:</code> <code>print(\"majeur\")</code> <code>else:</code> <code>print(\"mineur\")</code> Attention \u00e0 l'indentation. <code>elif</code> sinon si <code>if age &gt;= 18:</code> <code>print(\"adulte\")</code> <code>elif age &gt;= 14:</code> <code>print(\"ado\")</code> <code>else:</code> <code>print(\"enfant\")</code> <code>elif</code> est une contraction d'un <code>else</code> et d'un <code>if</code>. Il permet de simplifier parfois les tests mais n'est jamais obligatoire. <code>for ... in ...</code> boucle for <code>for n in [3, 5, 9]:</code> <code>print(\"gagn\u00e9 !\")</code> La structure de boucle sert \u00e0 r\u00e9p\u00e9ter une instruction,  lorsqu'une variable parcourt un ensemble \u00e9num\u00e9rable. <code>while</code> boucle tant que <code>while points &lt; 10 :</code> <code>print(\"continuez !\")</code> Attention, il faut s'assurer qu'on puisse   bien sortir de cette boucle. <code>def</code> fonction <code>def welcome():</code> <code>print(\"bonjour !\")</code> Une fonction peut prendre aucun ou plusieurs param\u00e8tre(s). <code>return</code> renvoi <code>def affine(x):</code> <code>return 3*x + 2</code> \u00c0 utiliser lorsque la fonction doit renvoyer une valeur."},{"location":"Memento_Python/commandes/#5-librairie-numpy","title":"5. Librairie <code>numpy</code>","text":""},{"location":"Memento_Python/commandes/#50-importation","title":"5.0 Importation","text":"<p>La librairie de calcul scientifique <code>numpy</code> peut s'importer de deux mani\u00e8res :</p>"},{"location":"Memento_Python/commandes/#methode-1-deconseillee","title":"M\u00e9thode  1 (d\u00e9conseill\u00e9e)","text":"<pre><code>from numpy import *\n</code></pre> <p>Cette m\u00e9thode est \u00e0 d\u00e9conseiller car elle importe la totalit\u00e9 de la biblioth\u00e8que.</p>"},{"location":"Memento_Python/commandes/#methode-2-a-priviegier","title":"M\u00e9thode  2 (\u00e0 privi\u00e9gier)","text":"<pre><code>import numpy as np\n</code></pre> <p>Toutes les commandes de <code>numpy</code> devront donc \u00eatre pr\u00e9fix\u00e9es par <code>np.</code> </p>"},{"location":"Memento_Python/commandes/#51-commandes-de-base","title":"5.1 Commandes de base","text":"Commande Signification Exemple Commentaires <code>np.e</code> constante d'euler <code>&gt;&gt;&gt; np.e</code> <code>2.718281828459045</code> <code>np.pi</code> pi <code>&gt;&gt;&gt; np.pi</code> <code>3.141592653589793</code> <code>np.exp()</code> fonction exponentielle <code>&gt;&gt;&gt; np.exp(1)</code> <code>2.718281828459045</code> <code>np.log()</code> fonction logarithme <code>&gt;&gt;&gt; np.log(np.e)</code> <code>1.0</code> Logarithme de base <code>e</code> <code>np.sqrt()</code> fonction racine carr\u00e9e <code>&gt;&gt;&gt; np.sqrt(2)</code> <code>1.4142135623730951</code> <code>np.abs()</code> fonction valeur absolue <code>&gt;&gt;&gt; np.abs(-2)</code> <code>2</code> <code>np.floor()</code> fonction partie enti\u00e8re <code>&gt;&gt;&gt; np.floor(4.2)</code> <code>4.0</code>"},{"location":"Memento_Python/commandes/#52-operations-sur-les-matrices","title":"5.2 Op\u00e9rations sur les matrices","text":"Commande Signification Exemple Commentaires <code>np.array()</code> cr\u00e9ation d'une matrice <code>&gt;&gt;&gt; np.array([[1,3],[0,5]])</code> <code>array([[ 1,  3],</code> <code>[0,  5]])</code> <p>Les op\u00e9rateurs <code>+</code>, <code>-</code>, <code>/</code>, <code>*</code> et <code>**</code> sont accept\u00e9es mais ne font que des op\u00e9rations terme \u00e0 terme. En particulier, le produit <code>*</code> n'effectue pas un produit matriciel classique. Il faut pour cela utiliser :</p> Commande Signification Exemple Commentaires <code>np.dot()</code> produit matriciel <code>&gt;&gt;&gt; np.dot(A, B)</code> Renvoie le produit matriciel des matrices A et B. <code>np.sum()</code> somme <code>&gt;&gt;&gt; np.sum([[1,3],[0,5]])</code> <code>2</code> Somme des \u00e9l\u00e9ments d'une matrice. <code>np.min()</code> minimum <code>&gt;&gt;&gt; np.min([[1,3],[0,5]])</code> <code>0</code> Mininum des \u00e9l\u00e9ments d'une matrice. <code>np.max()</code> minimum <code>&gt;&gt;&gt; np.max([[1,3],[0,5]])</code> <code>5</code> Maximum des \u00e9l\u00e9ments d'une matrice. <code>np.mean()</code> moyenne <code>&gt;&gt;&gt; np.mean([[1,3],[0,5]])</code> <code>2.25</code> Moyenne des \u00e9l\u00e9ments d'une matrice. <code>np.cumsum()</code> somme cumul\u00e9e <code>&gt;&gt;&gt; np.cumsum([1, 3, 2, 4])</code> <code>array([ 1,  4,  6, 10])</code> Somme cumul\u00e9e des \u00e9l\u00e9ments d'une matrice.  (ici d'un vecteur) <code>np.median()</code> m\u00e9diane <code>&gt;&gt;&gt; np.median([1, 3, 2, 4])</code> <code>2.5</code> Valeur m\u00e9diane des \u00e9l\u00e9ments d'une matrice.  (ici d'un vecteur) <code>np.var()</code> variance <code>&gt;&gt;&gt; np.var([1, 3, 2, 4])</code> <code>1.25</code> Variance des \u00e9l\u00e9ments d'une matrice.  (ici d'un vecteur) <code>np.std()</code> \u00e9cart-type <code>&gt;&gt;&gt; np.std([1, 3, 2, 4])</code> <code>1.118033988749895</code> \u00c9cart-type (standard deviation) des \u00e9l\u00e9ments d'une matrice.  (ici d'un vecteur)"},{"location":"Memento_Python/commandes/#53-sous-librairie-random","title":"5.3 Sous-librairie <code>random</code>","text":"<p>La partie du programme \u00abSimulation de lois\u00bb utilisera la sous-librairie <code>random</code> de <code>numpy</code>.</p> <p>Elle sera import\u00e9e par :</p> <pre><code>import numpy.random as rd\n</code></pre> Commande Signification Exemple Commentaires <code>rd.random()</code> nombre al\u00e9atoire dans [0;1[ <code>&gt;&gt;&gt; rd.random()</code> <code>0.942591321534259</code>"},{"location":"Memento_Python/commandes/#6-librairie-pandas","title":"6. Librairie <code>pandas</code>","text":"<p>La librairie <code>pandas</code> sera import\u00e9e par :</p> <pre><code>import pandas as pd\n</code></pre> Commande Signification Exemple Commentaires <code>mean()</code> moyenne <code>&gt;&gt;&gt; df = pd.DataFrame([2,4,10,3])</code> <code>&gt;&gt;&gt; df.mean()</code> <code>0    4.75</code> <code>dtype: float64</code> Attention, <code>mean()</code> s'applique sur une <code>dataframe</code>. <code>std()</code> \u00e9cart-type <code>&gt;&gt;&gt; df = pd.DataFrame([2,4,10,3])</code> <code>&gt;&gt;&gt; df.std()</code> <code>0    3.593976</code> <code>dtype: float64</code> Attention, <code>std()</code> s'applique sur une <code>dataframe</code>."},{"location":"Memento_Python/commandes/#7-librairie-matplotlibpyplot","title":"7. Librairie <code>matplotlib.pyplot</code>","text":"<p>La sous-librairie <code>matplotlib.pyplot</code> sera import\u00e9e par :</p> <pre><code>import matplotlib.pyplot as plt\n</code></pre> Commande Signification Exemple Commentaires <code>plt.plot()</code> construction d'un graphique <code>&gt;&gt;&gt; plt.plot([1,2,3], [15,12,17])</code> Cr\u00e9e un graphique (mais ne l'affiche pas)  contenant les points (1,15), (2,12) et (3, 17). <code>plt.show()</code> affichage <code>&gt;&gt;&gt; plt.show()</code> Affiche un graphique pr\u00e9c\u00e9demment cr\u00e9\u00e9."},{"location":"Programmes/1A/","title":"1A","text":""},{"location":"Programmes/1A/#programme-ect1-partie-informatique","title":"Programme ECT1 - partie informatique","text":""},{"location":"Programmes/2A/","title":"2A","text":""},{"location":"Programmes/2A/#programme-ect2-partie-informatique","title":"Programme ECT2 - partie informatique","text":""},{"location":"TD01/TD01/","title":"TD01 : R\u00e9visions des structures \u00e9l\u00e9mentaires","text":"<p> Lien pour ouvrir une console Python dans un nouvel onglet</p>"},{"location":"TD01/TD01/#1-affectations","title":"1. Affectations","text":"<p>Exercice 1</p> \u00c9nonc\u00e9Correction <p>On consid\u00e8re deux variables <code>a</code> et <code>b</code>, valant respectivement 3 et 5. <pre><code>&gt;&gt;&gt; a = 3\n&gt;&gt;&gt; b = 5\n</code></pre> Proposer une suite d'instructions qui \u00e9change les valeurs de <code>a</code> et de <code>b</code>. </p> <ol> <li>M\u00e9thode universelle, avec une variable temporaire : <pre><code>&gt;&gt;&gt; temp = a\n&gt;&gt;&gt; a = b\n&gt;&gt;&gt; b = temp\n</code></pre></li> <li>M\u00e9thode rapide (sp\u00e9cifique \u00e0 Python) : <pre><code>&gt;&gt;&gt; a, b = b, a\n</code></pre></li> </ol> <p>En savoir plus sur les variables</p>"},{"location":"TD01/TD01/#2-boucles-bornees-boucles-for","title":"2. Boucles born\u00e9es : boucles <code>for</code>","text":"<p>Exercice 2</p> \u00c9nonc\u00e9Correction <p>\u00c9crire un code affichant 13 fois le mot <code>\"bonjour\"</code> (sans copier-coller, \u00e9videmment...) .</p> <pre><code>for k in range(13):\n    print(\"bonjour\")\n</code></pre> <p>En savoir plus sur la boucle <code>for</code></p>"},{"location":"TD01/TD01/#3-boucles-non-bornees-boucles-while","title":"3. Boucles non born\u00e9es : boucles <code>while</code>","text":"<p>Exercice 3</p> \u00c9nonc\u00e9Correction <p>Copier et ex\u00e9cuter le code ci-dessous : <pre><code>somme = 0\nk = 0\nwhile somme &lt; 3:\n    k = k + 1 #(1)\n    somme = somme + 1/k #(2)\nprint(k)\n</code></pre></p> <ol> <li>Peut aussi s'\u00e9crire plus rapidement avec <code>k += 1</code></li> <li>ou <code>somme += 1/k</code> </li> </ol> <p>Expliquer la signification de la valeur affich\u00e9e. Vous pouvez d\u00e9tailler le fonctionnement de ce code gr\u00e2ce \u00e0 PythonTutor</p> <p>11 est la plus petite valeur de \\(k\\) pour laquelle la somme \\(1 + \\frac{1}{2} + \\frac{1}{3} + \\dots + \\frac{1}{k}\\) devient sup\u00e9rieure ou \u00e9gale \u00e0 3.</p> <p>En savoir plus la boucle <code>while</code> </p> <p>Exercice 4</p> \u00c9nonc\u00e9Correction <p>Un capital de 10 000 \u20ac est plac\u00e9 au taux annuel de 4 %. </p> <p>\u00c9crire le code permettant d'afficher au bout de combien d'ann\u00e9es le capital va d\u00e9passer 14 000 \u20ac.</p> <pre><code>capital = 10000\nannee = 0\nwhile capital &lt; 14000:\n    annee += 1\n    capital = capital * 1.04 #(1)\nprint(annee)\n</code></pre> <ol> <li>ou <code>capital *= 1.04</code> </li> </ol>"},{"location":"TD01/TD01/#4-fonctions-tests","title":"4. Fonctions / tests","text":"<p>Exercice 5</p> \u00c9nonc\u00e9Correction <p>Quel est l'autre nom de la fonction <code>mystere</code> d\u00e9finie dans le code ci-dessous ?  </p> <pre><code>def mystere(x):\n    if x &gt; 0:\n        return x\n    else:\n        return -x\n</code></pre> <p>C'est la fonction math\u00e9matique valeur absolue.</p> <p>En savoir plus sur les fonctions</p> <p>Exercice 6</p> \u00c9nonc\u00e9Correction <p>En vous inspirant de l'exercice pr\u00e9c\u00e9dent, \u00e9crire une fonction <code>maximum</code> qui prend en param\u00e8tres deux nombres <code>a</code> et <code>b</code> et qui renvoie le plus grand de ces deux nombres.</p> <p>Exemple d'utilisation : <pre><code>&gt;&gt;&gt; maximum(4,7)\n7\n</code></pre></p> <pre><code>def maximum(a, b):\n    if a &gt; b:\n        return a\n    else:\n        return b\n</code></pre>"},{"location":"TD01/TD01/#5-librairie-numpy","title":"5. Librairie <code>numpy</code>","text":"<p>Exercice 7</p> \u00c9nonc\u00e9Correction <p>Afficher une suite de 50 nombres (pseudo-)al\u00e9atoires dans l'intervalle \\([0;1[\\).</p> <pre><code>import numpy.random as rd\n\nfor k in range(100):\n    print(rd.random())\n</code></pre> <p>Exercice 8</p> \u00c9nonc\u00e9Correction <p>Que fait le code ci-dessous ? <pre><code>import numpy as np\nimport numpy.random as rd\n\ndef mystere(val):\n    n = 100\n    c = 0\n    j = 0\n    while j &lt; n:\n        x = 1 + np.floor(6*rd.random())\n        y = 1 + np.floor(6*rd.random())\n        if x + y == val:\n            c += 1\n        j += 1\n\n    return c/n\n</code></pre></p> <p>Exercice 9</p> \u00c9nonc\u00e9Correction <p>\u00c9crire un code o\u00f9 l'utilisateur doit deviner un nombre choisi al\u00e9atoirement par l'ordinateur entre 1 et 100. L'utilisateur devra \u00eatre guid\u00e9 apr\u00e8s chaque proposition par les instructions \u00abtrop grand\u00bb ou \u00abtrop petit\u00bb.</p> <p> aide :</p> <pre><code>import numpy as np\nimport numpy.random as rd\n\nnb_secret = ...\n\nprop = int(input(\"proposition ? \"))\nwhile ...\n</code></pre>"},{"location":"TD02/TD02/","title":"TD02 : Premi\u00e8res simulations","text":"<p> Lien pour ouvrir une console Python dans un nouvel onglet</p>"},{"location":"TD02/TD02/#1-rappels","title":"1. Rappels","text":"<p>Chaque langage de programmation permet de simuler du hasard. Ce hasard n'est que du pseudo-hasard, un ordinateur \u00e9tant par d\u00e9finition un objet d\u00e9terministe, effectuant de mani\u00e8re fid\u00e8le et r\u00e9p\u00e9titive des op\u00e9rations ordonn\u00e9es par le programmeur.</p> <p>Nous allons travailler avec le g\u00e9n\u00e9rateur pseudo-al\u00e9atoire (GPA) du module <code>random</code> de la biblioth\u00e8que <code>numpy</code>. </p> <p>Exemples </p> <pre><code>&gt;&gt;&gt; import numpy as np\n&gt;&gt;&gt; import numpy.random as rd\n&gt;&gt;&gt; rd.random()\n0.5488135039273248\n&gt;&gt;&gt; rd.random()\n0.7151893663724195\n&gt;&gt;&gt; rd.random()\n0.6027633760716439\n&gt;&gt;&gt; rd.seed(0)  # r\u00e9initialisation de la graine du GPA\n&gt;&gt;&gt; rd.random()\n0.5488135039273248 # les m\u00eames nombres reviennent...\n&gt;&gt;&gt; rd.random()\n0.7151893663724195\n</code></pre>"},{"location":"TD02/TD02/#2-lancers-de-des","title":"2. Lancers de d\u00e9s","text":"<p>Exercice 1</p> \u00c9nonc\u00e9 <p>Que fait le code ci-dessous ? <pre><code>import numpy as np\nimport numpy.random as rd\n\ndef mystere(val):\n    n = 100\n    c = 0\n    j = 0\n    while j &lt; n:\n        x = 1 + np.floor(6*rd.random())\n        y = 1 + np.floor(6*rd.random())\n        if x + y == val:\n            c += 1\n        j += 1\n\n    return c/n\n</code></pre></p> <p>Remarque : l'instruction <code>np.floor(6*rd.random())</code> aurait pu avantageusement \u00eatre remplac\u00e9e par <code>rd.randint(1,6)</code>.  </p>"},{"location":"TD02/TD02/#3-utilisation-de-matplotlib","title":"3. Utilisation de <code>matplotlib</code>","text":"<p><code>matplotlib</code> est une biblioth\u00e8que permettant le trac\u00e9 de graphiques. Elle sera syst\u00e9matiquement import\u00e9e par :</p> <pre><code>import matplotlib.pyplot as plt\n</code></pre> <p>Le code : <pre><code>import matplotlib.pyplot as plt\nX = [0,1,3,6]\nY = [12,10,7,15]\nplt.plot(X,Y,'ro') # r pour red, o pour un cercle. voir https://matplotlib.org/api/markers_api.html\nplt.show()\n</code></pre> fait appara\u00eetre le graphique suivant </p> <p>On y retrouve les points de coordonn\u00e9es (0,12), (1,10), ..., (6,15). On aurait aussi pu tracer la ligne bris\u00e9e les reliant :</p> <pre><code>import matplotlib.pyplot as plt\nplt.clf() # pour effacer les anciens graphiques\nX = [0,1,3,6]\nY = [12,10,7,15]\nplt.plot(X,Y,'b-') # b pour blue, - pour des segments\nplt.show()\n</code></pre> <p></p> <p>Ou bien encore un diagramme en barres :</p> <pre><code>import matplotlib.pyplot as plt\nplt.clf() # pour effacer les anciens graphiques\nX = [0,1,3,6]\nY = [12,10,7,15]\nplt.bar(X,Y) \nplt.show()\n</code></pre> <p></p>"},{"location":"TD02/TD02/#4-construire-une-liste","title":"4. Construire une liste","text":"<p>Nous avons vu que <code>matplotlib</code> n\u00e9cessite la cr\u00e9ation de deux listes <code>X</code> et <code>Y</code> contenant respectivement les abscisses et les ordonn\u00e9es qui nous int\u00e9ressent. </p> <p>Comment construire ces listes ? De nombreuses m\u00e9thodes existent en Python.</p>"},{"location":"TD02/TD02/#41-construire-une-liste-de-nombres-entiers-consecutifs","title":"4.1 Construire une liste de nombres entiers cons\u00e9cutifs","text":"<p>Ceci est n\u00e9cessaire pour construire la liste des abscisses. On utilisera alors l'instruction <code>arange</code> de <code>numpy</code> : </p> <ul> <li><code>np.arange(n1,n2)</code> : renvoie un tableau (qu'on consid\u00e8rera comme un liste) contenant tous les entiers de <code>n1</code> (inclus) \u00e0   <code>n2</code> (exclus). Tr\u00e8s souvent utilis\u00e9 pour construire la liste <code>X</code>.</li> </ul> <p> Exemple :</p> <pre><code>&gt;&gt;&gt; np.arange(1,7)\narray([1, 2, 3, 4, 5, 6])\n</code></pre>"},{"location":"TD02/TD02/#42-construire-une-liste-pleine-de-zeros","title":"4.2 Construire une liste pleine de z\u00e9ros","text":"<p>L'instruction <code>zeros</code> de <code>numpy</code> permet de construire un tableau plein de z\u00e9ros.</p> <p> Exemple :</p> <pre><code>&gt;&gt;&gt; np.zeros(6)\narray([0., 0., 0., 0., 0., 0.])\n</code></pre> <p>Mais pourquoi un tableau plein de z\u00e9ros ? Pour pouvoir le remplir ensuite avec une boucle :</p> <p> Exemple :</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nX = np.arange(10)\nY = np.zeros(10)\n\ndef f(x):\n    return np.log(x+1) \n\nfor k in range(10):\n    Y[k] = f(k) \n\nplt.clf()\nplt.plot(X, Y, '-')\nplt.show()\n</code></pre>"},{"location":"TD02/TD02/#43-construire-une-liste-directement-methode-par-comprehension","title":"4.3 Construire une liste directement (m\u00e9thode par compr\u00e9hension)","text":"<p>C'est de loin la m\u00e9thode la plus \u00e9l\u00e9gante. Elle consiste \u00e0 \u00e9crire \u00e0 l'int\u00e9rieur de la liste la formule de cr\u00e9ation de celle-ci.</p> <p> Exemple :</p> <pre><code>&gt;&gt;&gt; lst = [k**2 for k in range(6)]\n&gt;&gt;&gt; lst\n[0, 1, 4, 9, 16, 25]\n</code></pre> <p>Le code pr\u00e9c\u00e9dent de trac\u00e9 de la fonction \\(\\ln(x+1)\\) peut donc s'\u00e9crire aussi :</p> <pre><code>import numpy as np\n\ndef f(x):\n    return np.log(x+1) \n\nX = np.arange(10)\nY = [f(k) for k in X] \n\nplt.clf()\nplt.plot(X, Y, '-')\nplt.show()\n</code></pre> <p>Exercice 2</p> \u00c9nonc\u00e9 <p>Tracer le diagramme en barres de la fonction <code>mystere</code> de l'exercice 1, pour des valeurs allant entre 0 et 12.</p>"},{"location":"TD02/TD02/#5-retour-sur-le-while","title":"5. Retour sur le <code>while</code>.","text":"<p>Exercice 3</p> \u00c9nonc\u00e9 <p>\u00c9crire un code o\u00f9 l'utilisateur doit deviner un nombre choisi al\u00e9atoirement par l'ordinateur entre 1 et 100. L'utilisateur devra \u00eatre guid\u00e9 apr\u00e8s chaque proposition par les instructions \u00abtrop grand\u00bb ou \u00abtrop petit\u00bb.</p> <p> aide :</p> <pre><code>import numpy as np\nimport numpy.random as rd\n\nnb_secret = ...\n\nprop = int(input(\"proposition ? \"))\nwhile ...\n    ...\n</code></pre>"},{"location":"TD02/TD02/#6-simulations-dune-experience-de-bernoulli","title":"6.  Simulations d'une exp\u00e9rience de Bernoulli","text":"<p>Comme l'instruction <code>rd.random()</code> renvoie un nombre al\u00e9atoire entre 0 et 1, une variable al\u00e9atoire suivant une loi de probabilit\u00e9 de Bernoulli de param\u00e8tre \\(p\\) peut \u00eatre simul\u00e9e par un test d'appartenance de <code>rd.random()</code> \u00e0 l'intervalle :</p> <ul> <li>\\([0;p]\\) (succ\u00e8s)</li> </ul> <p>ou</p> <ul> <li>\\(]p;1]\\) (\u00e9chec) :</li> </ul> <p></p> <p>Exercice 4</p> \u00c9nonc\u00e9Correction Q1Correction Q2 <p>On consid\u00e8re une urne comportant 3 boules blanches et 5 boules noires. </p> <ol> <li>Cr\u00e9er une fonction <code>tirage()</code> renvoyant la valeur 1 si la boule tir\u00e9e est blanche, et la valeur 0 si la boule tir\u00e9e est noire.</li> <li>Simuler 100 000 fois cette exp\u00e9rience al\u00e9atoire et afficher la fr\u00e9quence d'apparition d'une boule blanche. </li> </ol> <pre><code>import numpy as np\nimport numpy.random as rd\n\ndef tirage():\n    val_alea = rd.random()\n    if val_alea &lt; 3/8:\n        return 1\n    else:\n        return 0\n</code></pre> <pre><code>nb_tirages = 10**5\nsomme_blanches = 0\nfor k in range(nb_tirages):\n    somme_blanches += tirage()\n\nprint(somme_blanches / nb_tirages)\n</code></pre>"},{"location":"TD02/TD02/#7-retour-sur-les-suites","title":"7. Retour sur les suites","text":"<p>Exercice 5</p> <p>extrait du sujet 0 Ecricome</p> \u00c9nonc\u00e9 <p>On consid\u00e8re la suite \\((u_n)_{n \\in \\mathbb{N}^*}\\) d\u00e9finie par \\(u_1=\\dfrac{2}{3}\\) et, \\(\\forall n \\in \\mathbb{N}^*, u_{n+1}=\\dfrac{n+1}{3n}u_n\\).</p> <ol> <li>Calculer \\(u_1\\) et \\(u_3\\). Donner les r\u00e9sultats sous forme de fraction irr\u00e9ductible.</li> <li>Compl\u00e9ter la fonction Python ci-desous qui prend en entr\u00e9e la valeur \\(n\\) et renvoie la valeur de \\(u_n\\).</li> </ol> <pre><code>def suite(n):\n    u = 2/3\n    for k in range(1, n):\n        u = ...\n    return u\n</code></pre> <p>Exercice 6</p> <p>inspir\u00e9 du sujet Ecricome 2019</p> \u00c9nonc\u00e9 <p>Soit \\(g\\) la fonction num\u00e9rique r\u00e9elle d\u00e9finie sur l'intervalle \\(]0;+\\infty[\\) par :</p> \\[ g(x)=2x-1+\\ln \\left( \\frac{x}{x+1} \\right) \\] <p>Q1. \u00c9crire en Python la fonction \\(g\\).</p> <p>Le script Python ci-dessous construit un vecteur ligne contenant les 50 premiers termes de la suite \\((u_n)_{n \\geqslant 1}\\).</p> <pre><code>u = np.zeros(50)\nfor n in range(1,50):\n    u[n] = 2*n - 1 - g(n)\n\n\nS = np.cumsum(u)\nX = np.arange(50)\n\nplt.plot(X,S)\nplt.show()\n</code></pre> <p>Q2. Interpr\u00e9ter le contenu de la ligne 6 dans le contexte de l'\u00e9nonc\u00e9.</p> <p>Q3. Ex\u00e9cutez le script pr\u00e9c\u00e9dent et observez le graphique obtenu.</p> <p>Q4. Sur ce m\u00eame graphique, tracez la courbe repr\u00e9sentative de la fonction \\(\\ln\\).</p>"},{"location":"TD03/TD03/","title":"TD03 : Retour sur les simulations","text":"<p> Lien pour ouvrir une console Python dans un nouvel onglet</p>"},{"location":"TD03/TD03/#1-rappels-sur-les-experiences-de-bernoulli","title":"1. Rappels sur les exp\u00e9riences de Bernoulli","text":"<p>rappel de la syntaxe d'importation de <code>numpy.random</code></p> <pre><code>import numpy as np\nimport numpy.random as rd\n</code></pre> <p>Comme l'instruction <code>rd.random()</code> renvoie un nombre al\u00e9atoire entre 0 et 1, une variable al\u00e9atoire suivant une loi de probabilit\u00e9 de Bernoulli de param\u00e8tre \\(p\\) peut \u00eatre simul\u00e9e par un test d'appartenance de <code>rd.random()</code> \u00e0 l'intervalle :</p> <ul> <li>\\([0;p]\\) (succ\u00e8s)</li> </ul> <p>ou</p> <ul> <li>\\(]p;1]\\) (\u00e9chec) :</li> </ul> <p></p> <p>Exercice 1</p> \u00c9nonc\u00e9Correction Q1Correction Q2 <p>On consid\u00e8re une urne comportant 3 boules blanches et 5 boules noires. </p> <ol> <li>Cr\u00e9er une fonction <code>tirage()</code> renvoyant la valeur 1 si la boule tir\u00e9e est blanche, et la valeur 0 si la boule tir\u00e9e est noire.</li> <li>Simuler 100 000 fois cette exp\u00e9rience al\u00e9atoire et afficher la fr\u00e9quence d'apparition d'une boule blanche. </li> </ol> <pre><code>import numpy as np\nimport numpy.random as rd\n\ndef tirage():\n    val_alea = rd.random()\n    if val_alea &lt; 3/8:\n        return 1\n    else:\n        return 0\n</code></pre> <pre><code>nb_tirages = 10**5\nsomme_blanches = 0\nfor k in range(nb_tirages):\n    somme_blanches += tirage()\n\nprint(somme_blanches / nb_tirages)\n</code></pre> <p>Exercice 2</p> <p>inspir\u00e9 par Ecricome 2018</p> \u00c9nonc\u00e9Correction Q1Correction Q2Correction Q3 <p>On consid\u00e8re une urne \\(U\\) contenant deux boules blanches et une boule noire indiscernables au toucher, ainsi qu\u2019une urne \\(V\\) contenant une boule blanche et trois boules noires, elles aussi indiscernables au toucher. On effectue une suite de tirages d\u2019une boule dans ces urnes en proc\u00e9dant comme suit :</p> <ul> <li>le premier tirage a lieu dans l\u2019urne U ;</li> <li>tous les tirages s\u2019effectuent avec remise de la boule pioch\u00e9e dans l\u2019urne dont elle provient;</li> <li>si l\u2019on pioche une boule blanche lors d\u2019un tirage, le tirage suivant a lieu dans l\u2019autre urne;</li> <li>si l\u2019on pioche une boule noire lors d\u2019un tirage, le tirage suivant a lieu dans la m\u00eame urne.</li> </ul> <p>Pour tout entier naturel non nul \\(n\\), on note \\(X_n\\) la variable al\u00e9atoire \u00e9gale au nombre de boules blanches pioch\u00e9es au cours des \\(n\\) premiers tirages.</p> <p>On rappelle qu\u2019en Python, l\u2019instruction <code>rd.randint(1,k)</code>  renvoie un entier al\u00e9atoire compris entre 1 et <code>k-1</code> .</p> <p>Q1. Recopier et compl\u00e9ter les lignes \u00e0 pointill\u00e9s du script Python ci-dessous afin qu\u2019il simule la variable al\u00e9atoire \\(X_2\\) :</p> <p><pre><code>import numpy as np\nimport numpy.random as rd\n\ndef simulation():\n    tirage1 = rd.randint(1, 4)\n    if tirage1 &lt; 3:\n        res1 = 1\n        tirage2 = rd.randint(1, 5)\n        if tirage2 == 1:\n            res2 = 1\n        else:\n            res2 = 0\n    else:\n        res1 = 0\n        tirage2 = ...\n        if tirage2 &lt; 3:\n            res2 = ...\n        else:\n            res2 = ...\n\n    X = ... + ...\n    return X\n</code></pre> Q2. \u00c9crire une fonction <code>freq(n)</code> qui renvoie la valeur moyenne du nombre de boules blanches tir\u00e9es sur <code>n</code> exp\u00e9riences r\u00e9alis\u00e9es.</p> <p>Q3. En d\u00e9duire \\(E(X_2)\\) et retrouver ce r\u00e9sultat par un calcul th\u00e9orique.</p> <pre><code>import numpy as np\nimport numpy.random as rd\n\ndef simulation():\n    tirage1 = rd.randint(1, 4)\n    if tirage1 &lt; 3:\n        res1 = 1\n        tirage2 = rd.randint(1, 5)\n        if tirage2 == 1:\n            res2 = 1\n        else:\n            res2 = 0\n    else:\n        res1 = 0\n        tirage2 = rd.randint(1, 4)\n        if tirage2 &lt; 3:\n            res2 = 1\n        else:\n            res2 = 0\n\n    X = res1 + res2\n    return X\n</code></pre> <pre><code>def freq(n):\n    compteur = 0\n    for k in range(n):\n        compteur += simulation()\n    return compteur / n\n</code></pre> <p>Exp\u00e9rimentalement : <pre><code>&gt;&gt;&gt; freq(10**6)\n1.055416\n</code></pre></p> <p>Th\u00e9oriquement, en faisant un arbre de probalit\u00e9s,</p> \\[E(X_2) = 2 \\times \\dfrac{2}{6} +  1 \\times \\dfrac{1}{2} +  1 \\times \\dfrac{2}{9} = \\dfrac{57}{54}\\]"},{"location":"TD03/TD03/#2-retour-sur-le-while","title":"2. Retour sur le <code>while</code>.","text":"<p>Exercice 3</p> \u00c9nonc\u00e9Correction <p>\u00c9crire un code o\u00f9 l'utilisateur doit deviner un nombre choisi al\u00e9atoirement par l'ordinateur entre 1 et 100. L'utilisateur devra \u00eatre guid\u00e9 apr\u00e8s chaque proposition par les instructions \u00abtrop grand\u00bb ou \u00abtrop petit\u00bb.</p> <p> aide :</p> <pre><code>import numpy as np\nimport numpy.random as rd\n\nnb_secret = ...\n\nprop = int(input(\"proposition ? \"))\nwhile ...\n    ...\n</code></pre> <pre><code>import numpy as np\nimport numpy.random as rd\n\nnb_secret = 1 + np.floor(100*rd.random())\n\nprop = int(input(\"proposition ? \"))\nwhile prop != nb_secret:\n    if prop &gt; nb_secret:\n        print(\"trop grand\")\n    else:\n        print(\"trop petit\")\n    prop = int(input(\"proposition ? \"))\n\nprint(\"bravo !\")\n</code></pre>"},{"location":"TD03/TD03/#3-retour-sur-les-suites","title":"3. Retour sur les suites","text":"<p>Exercice 4</p> <p>extrait du sujet 0 Ecricome</p> \u00c9nonc\u00e9Correction Q1Correction Q2 <p>On consid\u00e8re la suite \\((u_n)_{n \\in \\mathbb{N}^*}\\) d\u00e9finie par \\(u_1=\\dfrac{2}{3}\\) et, \\(\\forall n \\in \\mathbb{N}^*, u_{n+1}=\\dfrac{n+1}{3n}u_n\\).</p> <ol> <li>Calculer \\(u_1\\) et \\(u_3\\). Donner les r\u00e9sultats sous forme de fraction irr\u00e9ductible.</li> <li>Compl\u00e9ter la fonction Python ci-desous qui prend en entr\u00e9e la valeur \\(n\\) et renvoie la valeur de \\(u_n\\).</li> </ol> <pre><code>def suite(n):\n    u = 2/3\n    for k in range(1, n):\n        u = ...\n    return u\n</code></pre> <p>\\(u_2=\\dfrac{4}{9}\\) et \\(u_3 = \\dfrac{2}{9}\\)</p> <pre><code>def suite(n):\n    u = 2/3\n    for k in range(1, n):\n        u = (k+1)/(3*k) * u\n    return u\n</code></pre> <p>Exercice 5</p> <p>inspir\u00e9 du sujet Ecricome 2019</p> \u00c9nonc\u00e9Correction Q1Correction Q2Correction Q3Correction Q4 <p>Soit \\(g\\) la fonction num\u00e9rique r\u00e9elle d\u00e9finie sur l'intervalle \\(]0;+\\infty[\\) par :</p> \\[ g(x)=2x-1+\\ln \\left( \\frac{x}{x+1} \\right) \\] <p>Q1. \u00c9crire en Python la fonction \\(g\\).</p> <p>Le script Python ci-dessous construit un vecteur ligne contenant les 50 premiers termes de la suite \\((u_n)_{n \\geqslant 1}\\).</p> <pre><code>u = np.zeros(50)\nfor n in range(1,50):\n    u[n] = 2*n - 1 - g(n)\n\n\nS = np.cumsum(u)\nX = np.arange(50)\n\nplt.plot(X,S)\nplt.show()\n</code></pre> <p>Q2. Interpr\u00e9ter le contenu de la ligne 6 dans le contexte de l'\u00e9nonc\u00e9.</p> <p>Q3. Ex\u00e9cutez le script pr\u00e9c\u00e9dent et observez le graphique obtenu.</p> <p>Q4. Sur ce m\u00eame graphique, tracez la courbe repr\u00e9sentative de la fonction \\(\\ln\\).</p> <pre><code>import numpy as np\ndef g(x):\n    return 2*x - 1 + np.log(x / (x+1))\n</code></pre> <p>L'expression <code>S = np.cumsum(u)</code> permet de calculer le vecteur de sommes cumul\u00e9es de la suite \\(u\\).</p> <p></p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\ndef g(x):\n    return 2*x - 1 + np.log(x / (x+1))\n\n\nu = np.zeros(50)\nfor n in range(1,50):\n    u[n] = 2*n - 1 - g(n)\n\n\nS = np.cumsum(u)\nX = np.arange(50)\n\nplt.clf()\nplt.plot(X,S)\nplt.plot(X, np.log(X))\nplt.show()\n</code></pre> <p></p>"},{"location":"TD04/TD04/","title":"TD04 : D\u00e9couverte du langage SQL","text":"<p> Avant de faire ces exercices, il faut avoir lu le Cours de SQL.</p> <p>Exercice  1</p> <p>Questions interactives \u00e0 r\u00e9aliser sur le site sqlzoo.net.</p> <p>Q1. Travail sur SELECT, (base de donn\u00e9es Nobel)  ici.</p> Correction <p>Corrections extraites du d\u00e9p\u00f4t https://github.com/jisaw/sqlzoo-solutions. <pre><code>/*\nThird section of sqlzoo, SELECT from Nobel\n*/\n\n--#1\n/*\nChange the query shown so that it displays Nobel prizes for 1950.\n*/\nSELECT yr, subject, winner\nFROM nobel\nWHERE yr = 1950\n\n--#2\n/*\nShow who won the 1962 prize for Literature.\n*/\nSELECT winner\nFROM nobel\nWHERE yr = 1962 AND subject = 'Literature'\n\n--#3\n/*\nShow the year and subject that won 'Albert Einstein' his prize.\n*/\nSELECT yr, subject\nFROM nobel\nWHERE winner = 'Albert Einstein'\n\n--#4\n/*\nGive the name of the 'Peace' winners since the year 2000, including 2000.\n*/\nSELECT winner\nFROM nobel\nWHERE subject = 'Peace' AND yr &gt;= 2000\n\n--#5\n/*\nShow all details (yr, subject, winner) of the Literature prize winners for 1980 to 1989 inclusive\n*/\nSELECT yr, subject, winner\nFROM nobel\nWHERE (yr &gt;=1980 AND yr &lt;=1989) AND subject = 'Literature'\n\n--#6\n/*\nShow all details of the presidential winners:\n\nTheodore Roosevelt\nWoodrow Wilson\nJimmy Carter\n*/\nSELECT *\nFROM nobel\nWHERE winner IN ('Theodore Roosevelt', 'Woodrow Wilson', 'Jimmy Carter')\n\n--#7\n/*\nShow the winners with first name John\n*/\nSELECT winner\nFROM nobel\nWHERE winner LIKE 'john%'\n\n--#8\n/*\nShow the Physics winners for 1980 together with the Chemistry winners for 1984.\n*/\nSELECT *\nFROM nobel\nWHERE (subject = \"Physics\" AND yr = '1980') OR (subject = 'Chemistry' AND yr = 1984)\n\n--#9\n/*\nShow the winners for 1980 excluding the Chemistry and Medicine\n*/\nSELECT *\nFROM nobel\nWHERE yr = 1980 AND subject NOT IN ('Chemistry', 'Medicine')\n\n--#10\n/*\nShow who won a 'Medicine' prize in an early year (before 1910, not including 1910) together with winners of a 'Literature' prize in a later year (after 2004, including 2004)\n*/\nSELECT *\nFROM nobel\nWHERE (subject  = 'Medicine' AND yr &lt; 1910) OR (subject = 'Literature' AND yr &gt;= 2004)\n\n--#11\n/*\nFind all details of the prize won by PETER GR\u00dcNBERG\n*/\nSELECT *\nFROM nobel\nWHERE winner LIKE 'peter gr%nberg'\n\n--#12\n/*\nFind all details of the prize won by EUGENE O'NEILL\n*/\nSELECT *\nFROM nobel\nWHERE winner = 'Eugene O''Neill'\n\n--#13\n/*\nKnights in order\n\nList the winners, year and subject where the winner starts with Sir. Show the the most recent first, then by name order.\n*/\nSELECT winner, yr, subject\nFROM nobel\nWHERE winner LIKE 'sir%'\nORDER BY yr DESC, winner\n\n--#14\n/*\nThe expression subject IN ('Chemistry','Physics') can be used as a value - it will be 0 or 1.\n\nShow the 1984 winners ordered by subject and winner name; but list Chemistry and Physics last.\n*/\nSELECT winner, subject, subject IN ('Physics','Chemistry')\nFROM nobel\nWHERE yr=1984\nORDER BY subject IN ('Physics','Chemistry'),subject,winner\n</code></pre></p> <p>Q2. Travail sur SUM et COUNT, (base de donn\u00e9es World)  ici. (jusqu'\u00e0 la question 5.)</p> Correction <p>Corrections extraites du d\u00e9p\u00f4t https://github.com/jisaw/sqlzoo-solutions. <pre><code>/*\nFifth section of sqlzoo, SUM and COUNT\n*/\n\n\n--#1\n/*\nShow the total population of the world.\n*/\nSELECT SUM(population)\nFROM world\n\n--#2\n/*\nList all the continents - just once each.\n*/\nSELECT DISTINCT(continent)\nFROM world\n\n--#3\n/*\nGive the total GDP of Africa\n*/\nSELECT SUM(gdp)\nFROM world\nWHERE continent = 'Africa'\n\n--#4\n/*\nHow many countries have an area of at least 1000000\n*/\nSELECT COUNT(name)\nFROM world\nWHERE area &gt;= 1000000\n\n--#5\n/*\nWhat is the total population of ('France','Germany','Spain')\n*/\nSELECT SUM(population)\nFROM world\nWHERE name IN ('France', 'Germany', 'Spain')\n\n--#6\n/*\nFor each continent show the continent and number of countries.\n*/\nSELECT continent, COUNT(name)\nFROM world\nGROUP BY continent\n\n\n--#7\n/*\nFor each continent show the continent and number of countries with populations of at least 10 million.\n*/\nSELECT continent, COUNT(name)\nFROM world\nWHERE population &gt;= 10000000\nGROUP BY continent\n\n--#8\n/*\nList the continents that have a total population of at least 100 million.\n*/\nSELECT continent\nFROM world\nGROUP BY continent\nHAVING SUM(population) &gt; 100000000\n</code></pre></p> <p>Q3. Travail sur JOIN, (base de donn\u00e9es Euro2012)  ici.</p> correction <pre><code>/*\nSixth section of sqlzoo, Join\n*/\n\n\n--#1\n/*\nThe first example shows the goal scored by 'Bender'.\n\nShow matchid and player name for all goals scored by Germany.\n*/\nSELECT matchid, player FROM goal\nWHERE teamid = 'GER'\n\n--#2\n/*\nFrom the previous query you can see that Lars Bender's goal was scored in game 1012. Notice that the column matchid in the goal table corresponds to the id column in the game table.\n\nShow id, stadium, team1, team2 for game 1012\n*/\nSELECT id,stadium,team1,team2\nFROM game\nWHERE id = 1012\n\n--#3\n/*\nYou can combine the two steps into a single query with a JOIN. You will get all the game details and all the goal details if you use\n\nSELECT *\n  FROM game JOIN goal ON (id=matchid)\nShow the player, teamid and mdate and for every German goal. teamid='GER'\n*/\nSELECT player, teamid, mdate\nFROM game\nJOIN goal ON (id=matchid AND teamid='GER')\n\n--#4\n/*\nUse the same JOIN as in the previous question.\n\nShow the team1, team2 and player for every goal scored by a player called Mario player LIKE 'Mario%'\n*/\nSELECT team1, team2, player\nFROM game\nJOIN goal ON (id=matchid AND player LIKE 'Mario%')\n\n--#5\n/*\nThe table eteam gives details of every national team including the coach. You can JOIN goal to eteam using the phrase goal JOIN eteam on teamid=id\n\nShow player, teamid, coach, gtime for all goals scored in the first 10 minutes gtime&lt;=10\n*/\nSELECT player, teamid, coach, gtime\nFROM goal\nJOIN eteam ON (teamid=id AND gtime&lt;=10)\n\n--#6\n/*\nTo JOIN game with eteam you could use either\ngame JOIN eteam ON (team1=eteam.id) or game JOIN eteam ON (team2=eteam.id)\n\nNotice that because id is a column name in both game and eteam you must specify eteam.id instead of just id\n\nList the the dates of the matches and the name of the team in which 'Fernando Santos' was the team1 coach.\n*/\nSELECT mdate, teamname\nFROM game\nJOIN eteam ON (team1=eteam.id AND coach LIKE '%Santos')\n\n--#7\n/*\nList the player for every goal scored in a game where the stadium was 'National Stadium, Warsaw'\n*/\nSELECT player\nFROM goal\nJOIN game ON (id=matchid AND stadium = 'National Stadium, Warsaw')\n\n--#8\n/*\nThe example query shows all goals scored in the Germany-Greece quarterfinal.\nInstead show the name of all players who scored a goal against Germany.\n*/\nSELECT DISTINCT(player)\nFROM game\nJOIN goal ON matchid = id\nWHERE ((team1='GER' OR team2='GER') AND teamid != 'GER')\n\n--#9\n/*\nShow teamname and the total number of goals scored.\n*/\nSELECT teamname, COUNT(player)\nFROM eteam\nJOIN goal ON id=teamid\nGROUP BY teamname\n\n--#10\n/*\nShow the stadium and the number of goals scored in each stadium.\n*/\nSELECT stadium, COUNT(player) AS goals\nFROM game\nJOIN goal ON (id=matchid)\nGROUP BY stadium\n\n--#11\n/*\nFor every match involving 'POL', show the matchid, date and the number of goals scored.\n*/\nSELECT matchid, mdate, COUNT(player) AS goals\nFROM game\nJOIN goal ON (matchid=id AND (team1 = 'POL' OR team2 = 'POL'))\nGROUP BY matchid, mdate\n\n--#12\n/*\nFor every match where 'GER' scored, show matchid, match date and the number of goals scored by 'GER'\n*/\nSELECT id, mdate, COUNT(player)\nFROM game\nJOIN goal ON (id=matchid AND (team1 = 'GER' OR team2 = 'GER') AND teamid='GER')\nGROUP BY id, mdate\n\n--#13\n/*\nList every match with the goals scored by each team as shown. This will use \"CASE WHEN\" which has not been explained in any previous exercises.\nmdate   team1   score1  team2   score2\n1 July 2012 ESP 4   ITA 0\n10 June 2012    ESP 1   ITA 1\n10 June 2012    IRL 1   CRO 3\n...\nNotice in the query given every goal is listed. If it was a team1 goal then a 1 appears in score1, otherwise there is a 0.\nYou could SUM this column to get a count of the goals scored by team1. Sort your result by mdate, matchid, team1 and team2.\n*/\nSELECT mdate,\nteam1,\nSUM(CASE WHEN teamid = team1 THEN 1 ELSE 0 END) AS score1,\nteam2,\nSUM(CASE WHEN teamid = team2 THEN 1 ELSE 0 END) AS score2 FROM\ngame LEFT JOIN goal ON (id = matchid)\nGROUP BY mdate,team1,team2\nORDER BY mdate, matchid, team1, team2\n</code></pre> <p>Exercice  2</p> <p>Gestion d'un r\u00e9seau d'agences de location de voitures.  D'apr\u00e8s le travail de J. Le Coupanec (Acad\u00e9mie de Rennes)</p> <p>La base de donn\u00e9es locations.db contient les tables <code>Agences</code>,<code>Locations</code>, <code>Vehicules</code>. </p> <ol> <li>R\u00e9pondez aux 9 questions sur la relation Agence. (Travail sur SELECT)</li> <li>R\u00e9pondez aux 11 questions sur la relation V\u00e9hicules. (Travail sur SELECT plus des fonctions d'agr\u00e9gation)</li> <li>R\u00e9pondez aux 12 questions sur la relation Locations. (Travail sur des jointures)</li> <li>R\u00e9pondez aux 17 questions sur la relation V\u00e9hicules. (Travail sur UPDATE, INSERT, DELETE)</li> </ol> <p>Exercice  3</p> <p>Championnat de France de Football 2015-2016</p> <p>D'apr\u00e8s le travail de J. Le Coupanec (Acad\u00e9mie de Rennes)</p> <p>La base de donn\u00e9es soccer.db contient les tables <code>Team</code>,<code>Match</code>, <code>Event</code>, <code>Player</code>.  </p> <p></p> <ol> <li>R\u00e9pondez \u00e0 ces 12 questions g\u00e9n\u00e9rales.</li> <li>R\u00e9pondez \u00e0 ces 11 questions sur l'\u00e9quipe de Lorient.</li> </ol> <p>Exercice  4</p> <p>Cet exercice en ligne est propos\u00e9 le Knight Lab de l'universit\u00e9 am\u00e9ricaine Northwerstern University.</p> <p></p> <p>Le point de d\u00e9part de l'histoire : un meurtre a \u00e9t\u00e9 commis dans la ville de SQL City le 15 janvier 2018.</p> <p>\u00c0 partir de ce point de d\u00e9part et d'une base de donn\u00e9es dont le diagramme est donn\u00e9 ci-dessous, il s'agit de trouver le meurtrier.</p> <p></p> <p>Rendez-vous sur cette page, et bonne enqu\u00eate \u00e0 coups de requ\u00eates !</p> <ul> <li> <p>Vous pouvez travailler en ligne ou bien dans votre SGBD pr\u00e9f\u00e9r\u00e9, avec la base sql-murder-mystery.db. Attention pour valider votre r\u00e9ponse, il faudra vous rendre en bas de la page officielle.</p> </li> <li> <p>Vous pouvez trouver des \u00e9l\u00e9ments de correction ici...</p> </li> </ul>"},{"location":"TD05/TD05/","title":"TD05 : SQL, jointures, modifications, cr\u00e9ations","text":"<p> Avant de faire ces exercices, il faut avoir lu le Cours de SQL.</p> <p>Exercice  1</p> <p>Extrait du sujet 0 n\u00b02 Ecricome ECG Math\u00e9matiques Appliqu\u00e9es</p> <p>On dispose d\u2019une base de donn\u00e9es comportant deux tables <code>vehicule</code> et <code>annonce</code> d\u00e9crites ci-dessous. </p> <p>La table <code>vehicule</code> recense des informations sur les mod\u00e8les de v\u00e9hicules en vente sur le march\u00e9. Elle est compos\u00e9e des attributs suivants. </p> <ul> <li><code>id_vehicule</code> (de type <code>INTEGER</code>) : un code permettant d\u2019identifier de fa\u00e7on unique chaque r\u00e9f\u00e9rence de v\u00e9hicule (marque et mod\u00e8le).  </li> <li><code>marque</code> (de type <code>TEXT</code>) : le nom du constructeur du v\u00e9hicule.  </li> <li><code>modele</code> (de type <code>TEXT</code>) : le mod\u00e8le du v\u00e9hicule, un constructeur proposant en g\u00e9n\u00e9ral plusieurs mod\u00e8les de v\u00e9hicules \u00e0 la vente.  </li> <li><code>prix_neuf</code> (de type <code>INTEGER</code>) : prix de vente du v\u00e9hicule neuf.</li> </ul> <p>La table <code>annonce</code> regroupe des informations sur un grand nombre d\u2019annonces de v\u00e9hicules d\u2019occasion. Chaque enregistrement correspond \u00e0 une annonce et poss\u00e8de les attributs suivants.</p> <ul> <li><code>id_annonce</code> (de type <code>INTEGER</code>) : un code permettant d\u2019identifier chaque annonce de fa\u00e7on unique.  </li> <li><code>id_vehicule</code> (de type <code>INTEGER</code>) : l\u2019identifiant du mod\u00e8le de v\u00e9hicule vendu, qui correspond \u00e0 l\u2019identifiant utilis\u00e9 dans la table vehicules.  </li> <li><code>annee</code> (de type <code>INTEGER</code>) : ann\u00e9e de premi\u00e8re mise en circulation du v\u00e9hicule.  </li> <li><code>km</code> (de type <code>INTEGER</code>) : nombre de kilom\u00e8tres parcourus par le v\u00e9hicule au moment de la revente.  </li> <li><code>prix_occasion</code> (de type <code>INTEGER</code>) : prix de vente du v\u00e9hicule d\u2019occasion.</li> </ul> <p>Q1. En justifiant bri\u00e8vement, identifier une clef primaire dans chacune des tables <code>vehicule</code> et <code>annonce</code>, ainsi qu\u2019une clef \u00e9trang\u00e8re dans la table <code>annonce</code>.  </p> Correction <ul> <li>Table <code>vehicule</code> : <code>id_vehicule</code> peut jouer le r\u00f4le de cl\u00e9 primaire car il identifie de mani\u00e8re unique chaque v\u00e9hicule.</li> <li>Table <code>annonce</code> : <ul> <li><code>id_annonce</code> peut jouer le r\u00f4le de cl\u00e9 primaire car il identifie de mani\u00e8re unique chaque annonce.</li> <li><code>id_vehicule</code> est une cl\u00e9 \u00e9trang\u00e8re car c'est une cl\u00e9 primaire de la table <code>vehicule</code>. </li> </ul> </li> </ul> <p>Q2. \u00c9crire une requ\u00eate SQL permettant d\u2019extraire les noms de tous les mod\u00e8les de v\u00e9hicules mis en vente par le constructeur <code>Dubreuil Motors</code>. </p> Correction <pre><code>SELECT modele\nFROM vehicule\nWHERE marque = 'Dubreuil Motors'\n</code></pre> <p>Q3. Expliquer le fonctionnement de la requ\u00eate SQL suivante et pr\u00e9ciser l\u2019effet \u00e9ventuel de cette requ\u00eate sur chacune des tables <code>vehicule</code> et <code>annonce</code>. <pre><code>UPDATE annonce\nSET prix_occasion = prix_neuf\nFROM vehicule\nWHERE vehicule.id_vehicule = annonce.id_vehicule\nAND vehicule.prix_neuf &lt; annonce.prix_occasion\n</code></pre></p> Correction <p>Cette requ\u00eate met \u00e0 jour la table <code>annonce</code>. On change le <code>prix_occasion</code> (qui devient \u00e9gal au <code>prix neuf</code>) toutes les voitures dont on a rep\u00e9r\u00e9 que le <code>prix_occasion</code> \u00e9tait sup\u00e9rieur au <code>prix_neuf</code>, ce qui n'est pas normal. L'identification entre les deux tables se fait gr\u00e2ce \u00e0 la ligne <code>vehicule.id_vehicule = annonce.id_vehicule</code>.  Cette mani\u00e8re de proc\u00e9der (action sur deux tables sans jointure) est tr\u00e8s fortement d\u00e9conseill\u00e9e. Cette question n'aurait pas d\u00fb \u00eatre pos\u00e9e.</p> <p>Q4. \u00c0 l\u2019aide d\u2019une jointure, \u00e9crire une requ\u00eate SQL permettant d\u2019obtenir, sur une m\u00eame table, la liste de toutes les annonces de la table <code>annonce</code> avec les attributs suivants :</p> <ul> <li>l\u2019identifiant de l\u2019annonce <code>id_annonce</code>.</li> <li>le kilom\u00e9trage <code>km</code>,</li> <li>le prix de vente du v\u00e9hicule neuf <code>prix_neuf</code>, </li> <li>le prix de l\u2019annonce d\u2019occasion <code>prix_occasion</code>.</li> </ul> Correction <pre><code>SELECT annonce.id_annonce, annonce.km, vehicule.prix_neuf, annonce.prix_occasion\nFROM annonce\nINNER JOIN vehicule ON vehicule.id_vehicule = annonce.id_vehicule\n</code></pre> <p>Exercice  2</p> <p>Questions interactives \u00e0 r\u00e9aliser sur le site sqlzoo.net.</p> <p>Q1. Travail sur JOIN, (base de donn\u00e9es Euro2012)  ici.</p> correction <pre><code>/*\nSixth section of sqlzoo, Join\n*/\n\n\n--#1\n/*\nThe first example shows the goal scored by 'Bender'.\n\nShow matchid and player name for all goals scored by Germany.\n*/\nSELECT matchid, player FROM goal\nWHERE teamid = 'GER'\n\n--#2\n/*\nFrom the previous query you can see that Lars Bender's goal was scored in game 1012. Notice that the column matchid in the goal table corresponds to the id column in the game table.\n\nShow id, stadium, team1, team2 for game 1012\n*/\nSELECT id,stadium,team1,team2\nFROM game\nWHERE id = 1012\n\n--#3\n/*\nYou can combine the two steps into a single query with a JOIN. You will get all the game details and all the goal details if you use\n\nSELECT *\n  FROM game JOIN goal ON (id=matchid)\nShow the player, teamid and mdate and for every German goal. teamid='GER'\n*/\nSELECT player, teamid, mdate\nFROM game\nJOIN goal ON (id=matchid AND teamid='GER')\n\n--#4\n/*\nUse the same JOIN as in the previous question.\n\nShow the team1, team2 and player for every goal scored by a player called Mario player LIKE 'Mario%'\n*/\nSELECT team1, team2, player\nFROM game\nJOIN goal ON (id=matchid AND player LIKE 'Mario%')\n\n--#5\n/*\nThe table eteam gives details of every national team including the coach. You can JOIN goal to eteam using the phrase goal JOIN eteam on teamid=id\n\nShow player, teamid, coach, gtime for all goals scored in the first 10 minutes gtime&lt;=10\n*/\nSELECT player, teamid, coach, gtime\nFROM goal\nJOIN eteam ON (teamid=id AND gtime&lt;=10)\n\n--#6\n/*\nTo JOIN game with eteam you could use either\ngame JOIN eteam ON (team1=eteam.id) or game JOIN eteam ON (team2=eteam.id)\n\nNotice that because id is a column name in both game and eteam you must specify eteam.id instead of just id\n\nList the the dates of the matches and the name of the team in which 'Fernando Santos' was the team1 coach.\n*/\nSELECT mdate, teamname\nFROM game\nJOIN eteam ON (team1=eteam.id AND coach LIKE '%Santos')\n\n--#7\n/*\nList the player for every goal scored in a game where the stadium was 'National Stadium, Warsaw'\n*/\nSELECT player\nFROM goal\nJOIN game ON (id=matchid AND stadium = 'National Stadium, Warsaw')\n\n--#8\n/*\nThe example query shows all goals scored in the Germany-Greece quarterfinal.\nInstead show the name of all players who scored a goal against Germany.\n*/\nSELECT DISTINCT(player)\nFROM game\nJOIN goal ON matchid = id\nWHERE ((team1='GER' OR team2='GER') AND teamid != 'GER')\n\n--#9\n/*\nShow teamname and the total number of goals scored.\n*/\nSELECT teamname, COUNT(player)\nFROM eteam\nJOIN goal ON id=teamid\nGROUP BY teamname\n\n--#10\n/*\nShow the stadium and the number of goals scored in each stadium.\n*/\nSELECT stadium, COUNT(player) AS goals\nFROM game\nJOIN goal ON (id=matchid)\nGROUP BY stadium\n\n--#11\n/*\nFor every match involving 'POL', show the matchid, date and the number of goals scored.\n*/\nSELECT matchid, mdate, COUNT(player) AS goals\nFROM game\nJOIN goal ON (matchid=id AND (team1 = 'POL' OR team2 = 'POL'))\nGROUP BY matchid, mdate\n\n--#12\n/*\nFor every match where 'GER' scored, show matchid, match date and the number of goals scored by 'GER'\n*/\nSELECT id, mdate, COUNT(player)\nFROM game\nJOIN goal ON (id=matchid AND (team1 = 'GER' OR team2 = 'GER') AND teamid='GER')\nGROUP BY id, mdate\n\n--#13\n/*\nList every match with the goals scored by each team as shown. This will use \"CASE WHEN\" which has not been explained in any previous exercises.\nmdate   team1   score1  team2   score2\n1 July 2012 ESP 4   ITA 0\n10 June 2012    ESP 1   ITA 1\n10 June 2012    IRL 1   CRO 3\n...\nNotice in the query given every goal is listed. If it was a team1 goal then a 1 appears in score1, otherwise there is a 0.\nYou could SUM this column to get a count of the goals scored by team1. Sort your result by mdate, matchid, team1 and team2.\n*/\nSELECT mdate,\nteam1,\nSUM(CASE WHEN teamid = team1 THEN 1 ELSE 0 END) AS score1,\nteam2,\nSUM(CASE WHEN teamid = team2 THEN 1 ELSE 0 END) AS score2 FROM\ngame LEFT JOIN goal ON (id = matchid)\nGROUP BY mdate,team1,team2\nORDER BY mdate, matchid, team1, team2\n</code></pre> <p>Exercice  3</p> <p>Gestion d'un r\u00e9seau d'agences de location de voitures.  D'apr\u00e8s le travail de J. Le Coupanec (Acad\u00e9mie de Rennes)</p> <p>La base de donn\u00e9es locations.db contient les tables <code>Agences</code>,<code>Locations</code>, <code>Vehicules</code>. </p> <ol> <li>R\u00e9pondez aux 9 questions sur la relation Agence. (Travail sur SELECT)</li> <li>R\u00e9pondez aux 11 questions sur la relation V\u00e9hicules. (Travail sur SELECT plus des fonctions d'agr\u00e9gation)</li> <li>R\u00e9pondez aux 12 questions sur la relation Locations. (Travail sur des jointures)</li> <li>R\u00e9pondez aux 17 questions sur la relation V\u00e9hicules. (Travail sur UPDATE, INSERT, DELETE)</li> </ol> <p>Exercice  4</p> <p>Championnat de France de Football 2015-2016</p> <p>D'apr\u00e8s le travail de J. Le Coupanec (Acad\u00e9mie de Rennes)</p> <p>La base de donn\u00e9es soccer.db contient les tables <code>Team</code>,<code>Match</code>, <code>Event</code>, <code>Player</code>.  </p> <p></p> <ol> <li>R\u00e9pondez \u00e0 ces 12 questions g\u00e9n\u00e9rales.</li> <li>R\u00e9pondez \u00e0 ces 11 questions sur l'\u00e9quipe de Lorient.</li> </ol> <p>Exercice  5</p> <p>Cet exercice en ligne est propos\u00e9 le Knight Lab de l'universit\u00e9 am\u00e9ricaine Northwerstern University.</p> <p></p> <p>Le point de d\u00e9part de l'histoire : un meurtre a \u00e9t\u00e9 commis dans la ville de SQL City le 15 janvier 2018.</p> <p>\u00c0 partir de ce point de d\u00e9part et d'une base de donn\u00e9es dont le diagramme est donn\u00e9 ci-dessous, il s'agit de trouver le meurtrier.</p> <p></p> <p>Rendez-vous sur cette page, et bonne enqu\u00eate \u00e0 coups de requ\u00eates !</p> <ul> <li> <p>Vous devez travailler sur le site officiel (tout en bas). Attention pour valider votre r\u00e9ponse, il faudra vous rendre dans la zone \u00abCheck your solution\u00bb.</p> </li> <li> <p>Vous pouvez trouver des \u00e9l\u00e9ments de correction ici...</p> </li> </ul>"},{"location":"TD06/TD06/","title":"TD06 : Lois de probabilit\u00e9s (et un soup\u00e7on de SQL)","text":""},{"location":"TD06/TD06/#1-fin-du-programme-de-sql-creation-insertion-modification-et-suppression","title":"1. Fin du programme de <code>SQL</code> : cr\u00e9ation, insertion, modification et suppression","text":"<p>Exercice  1</p> <p>SQL : travail sur  <code>CREATE</code> <code>INSERT</code>, <code>DELETE</code> et <code>UPDATE</code>.</p> <p>Lire en parall\u00e8le le cours 2. Cr\u00e9ation et modification d'une base de donn\u00e9es</p> <p>On souhaite cr\u00e9er une base de donn\u00e9es sur des joueurs de rugby.  On va donc cr\u00e9er une table appel\u00e9e <code>joueurs</code> qui respectera le sch\u00e9ma relationnel suivant :</p> <p><code>joueurs (id:INT, nom:TEXT, taille:INT, poids:INT, club:TEXT)</code> </p> <p>La cl\u00e9 primaire de cette table sera l'attribut <code>id</code>.</p> <p>Question 1</p> <p>Cr\u00e9er la table <code>joueurs</code>.</p> Votre code SQL : Ex\u00e9cuter Correction <pre><code>CREATE TABLE joueurs (\nid INTEGER PRIMARY KEY,\nnom TEXT,\ntaille INTEGER,\npoids INTEGER,\nclub TEXT\n);\n</code></pre> <p>Question 2</p> <p>Ins\u00e9rer les joueurs suivants :</p> <ul> <li>Dupont, 174, 84, Toulouse</li> <li>Jalibert, 181, 86, Bordeaux</li> <li>Penaud, 192, 95, Clermont</li> </ul> Votre code SQL Ex\u00e9cuter <pre></pre> Test de v\u00e9rification Ex\u00e9cuter <pre></pre> Correction <pre><code>INSERT INTO joueurs\nVALUES\n(1, 'Dupont', 174, 84, 'Toulouse'),\n(2, 'Jalibert', 181, 86, 'Bordeaux'),\n(3, 'Penaud', 192, 95, 'Clermont');\n</code></pre> <p>Question 3</p> <p>Afficher tous les renseignements sur les joueurs pesant moins de 90 kg. </p> Votre code SQL Ex\u00e9cuter <pre></pre> Correction <pre><code>SELECT * FROM joueurs\nWHERE poids &lt; 90;\n</code></pre> <p>Question 4</p> <p>Antoine Dupont a pris du poids. Il ne p\u00e8se plus 84 kg mais 87 kg. Faire la modification dans la base de donn\u00e9es. </p> Votre code SQL Ex\u00e9cuter <pre></pre> Test de v\u00e9rification Ex\u00e9cuter <pre></pre> Correction <pre><code>UPDATE joueurs\nSET poids = 87\nWHERE nom = 'Dupont';\n</code></pre> <p>Question 5</p> <p>Damian Penaud d\u00e9cide d'arr\u00eater sa carri\u00e8re pour devenir dentiste. Supprimer le joueur de la base de donn\u00e9es. </p> Votre code SQL Ex\u00e9cuter <pre></pre> Test de v\u00e9rification Ex\u00e9cuter <pre></pre> Correction <pre><code>DELETE FROM joueurs\nWHERE nom = 'Penaud';\n</code></pre> <p>Question 6</p> <p>On d\u00e9cide de supprimer totalement cette table de la base de donn\u00e9es. \u00c9crire la requ\u00eate permettant de supprimer la table <code>joueurs</code>.  </p> Votre code SQL Ex\u00e9cuter <pre></pre> Test de v\u00e9rification Ex\u00e9cuter <pre></pre> Correction <pre><code>DROP TABLE joueurs;\n</code></pre>"},{"location":"TD06/TD06/#2-retour-au-python-lois-de-probabilites-uniforme-binomiale-geometrique","title":"2. Retour au Python : lois de probabilit\u00e9s (uniforme, binomiale, g\u00e9om\u00e9trique)","text":"<p> Lien pour ouvrir une console Python dans un nouvel onglet</p> <p>  Syntaxe des lois usuelles  </p> <p>Rappel : on utilise les simulateurs de lois du module <code>random</code> de la biblioth\u00e8que <code>numpy</code>. Ceci n\u00e9cessite syst\u00e9matiquement la pr\u00e9sence des deux lignes suivantes au d\u00e9but de chaque script : <pre><code>import numpy as np\nimport numpy.random as rd   \n</code></pre></p> <ul> <li> <p> loi uniforme : </p> <ul> <li><code>rd.random()</code> renvoie un r\u00e9el dans \\([0;1]\\) qui suit une loi uniforme (chaque r\u00e9el a la m\u00eame probabilit\u00e9 d'apparition)</li> <li><code>rd.randint(a,b)</code> renvoie un entier dans \\([a;b[\\) qui suit une loi uniforme (chaque entier a la m\u00eame probabilit\u00e9 d'apparition). Attention, la valeur \\(b\\) n'est pas prise. Ce qui signifie que pour un tirage al\u00e9atoire uniforme de 0 et de 1, il faut utiliser l'expression <code>rd.randint(0,2)</code>.</li> </ul> </li> <li> <p> loi binomiale : <code>rd.binomial(n,p)</code> renvoie un entier qui suit une loi binomiale de param\u00e8tre \\((n,p)\\). (\\(n\\) r\u00e9p\u00e9titions d'une \u00e9preuve de Bernoulli de param\u00e8tre \\(p\\))</p> </li> <li> <p> loi g\u00e9om\u00e9trique : <code>rd.geometric(p)</code> renvoie un entier qui suit une loi g\u00e9om\u00e9trique de param\u00e8tre \\(p\\) (nombre d'exp\u00e9riences de Bernoulli de param\u00e8tre \\(p\\) avant l'apparition du premier succ\u00e8s)</p> </li> </ul> <p>Exercice  2</p> <p>Un gardien est devant une porte ferm\u00e9e : il poss\u00e8de un trousseau de 10 cl\u00e9s dont une seule ouvre la porte. Comme il fait nuit, le gardien essaie les cl\u00e9s au hasard, sans se souvenir quelle cl\u00e9 il vient de tester.</p> <p>Soit \\(X\\) la variable al\u00e9atoire qui compte le nombre d\u2019essais jusqu\u2019\u00e0 ce que la porte s\u2019ouvre.</p> <ol> <li>Que vaut \\(E(X)\\) ?</li> <li>\u00c9crire un code qui simule 100000 ouvertures de porte et retrouver la valeur th\u00e9orique de \\(E(X)\\).</li> </ol> Correction <ol> <li>\\(X\\) suit une loi g\u00e9om\u00e9trique de param\u00e8tre \\(p=\\frac{1}{10}=0,1\\). Donc \\(E(X) = \\frac{1}{p} = \\frac{1}{0.1} = 10\\)</li> <li><pre><code>import numpy as np\nimport numpy.random as rd\n\nn = 10**5\n\ns = 0\n\nfor k in range(n):\n    s += rd.geometric(0.1)\n\nprint(s/n)\n</code></pre></li> </ol> <p>Exercice  3</p> <p>d'apr\u00e8s ECT2 Math\u00e9matiques-Informatique, \u00e9ditions Ellipses.</p> <p>Un op\u00e9rateur d'un centre d'appel doit joindre 100 clients par t\u00e9l\u00e9phone. La probabilit\u00e9 qu'il joigne un client donn\u00e9 est \\(\\dfrac{1}{8}\\).</p> <p>Le matin, il lance une premi\u00e8re s\u00e9rie de 100 appels. L'apr\u00e8s-midi, il relance une s\u00e9rie d'appels, uniquement vers les clients qu'il n'a pas r\u00e9ussi \u00e0 joindre le matin.</p> <p>Compl\u00e9ter le script ci-dessous, pour qu'il simule cette exp\u00e9rience et affiche le nombre de clients que le vendeur a r\u00e9ussi \u00e0 contacter \u00e0 la fin de la journ\u00e9e.</p> <pre><code>import numpy as np\nimport numpy.random as rd\n\n# \u00e0 vous\n</code></pre> Correction <pre><code>import numpy as np\nimport numpy.random as rd\n\nnb_matin = rd.binomial(100, 1/8)\n\nnb_aprem = rd.binomial(100-nb_matin, 1/8)\n\ntotal = nb_matin + nb_aprem\n\nprint(total)\n</code></pre> <p>Exercice  4</p> <p>d'apr\u00e8s BCE ESC 2020</p> <p>Un mobile se d\u00e9place sur les points \u00e0 coordonn\u00e9es enti\u00e8res positives d'un axe d'origine \\(O\\). Au d\u00e9part, le mobile est \u00e0 l'origine (point d'abscisse 0). Le mobile se d\u00e9place selon la r\u00e8gle suivante : s'il est sur le point d'abscisse \\(k-1\\) (\\(k \\in \\mathbb{N}^*\\)) \u00e0 l'instant \\(n\\) (\\(n \\in \\mathbb{N}\\)), alors, \u00e0 l'instant \\(n+1\\), il sera sur le point d'abscisse \\(k\\) avec la probabilit\u00e9 \\(\\frac{k}{k+1}\\), ou sur le point d'abscisse 0 avec la probabilit\u00e9 \\(\\frac{1}{k+1}\\).</p> <p>On note \\(U\\) l'instant auquel le mobile se trouve pour la premi\u00e8re fois \u00e0 l'origine (sans compter son positionnement de d\u00e9part) et on admet que \\(U\\) est une variable al\u00e9atoire. </p> <p>Compl\u00e9ter les commandes du script Python suivant afin qu'il calcule et affiche la valeur prise par \\(U\\) lors de l'exp\u00e9rience al\u00e9atoire \u00e9tudi\u00e9e.</p> <pre><code>import numpy as np\nimport numpy.random as rd\n\nk = 1\nhasard = rd.randint(1, k+2)\nwhile hasard &lt; ...:\n    k = k + 1\n    hasard = ...\n\nprint('U a pris la valeur', ...)\n</code></pre> <p>Exercice  5</p> <p>d'apr\u00e8s BCE ESC 2020</p> <p>On effectue une succession de lancers (suppos\u00e9s ind\u00e9pendants) d'une pi\u00e8ce de monnaie \u00e9quilibr\u00e9e pour laquelle la probabilit\u00e9 d'obtenir \u00abpile\u00bb vaut \\(\\frac{1}{2}\\) et celle d'obtenir \u00abface\u00bb vaut aussi \\(\\frac{1}{2}\\).</p> <p>On consid\u00e8re aussi la variable al\u00e9atoire \\(X\\), \u00e9gale au rang d'apparition d'un premier \u00abpile\u00bb, et la variable al\u00e9atoire \\(Y\\), \u00e9gale au rang d'apparition du premier \u00abface\u00bb.</p> <p>On d\u00e9cide de coder \u00abpile\u00bb par 1 et \u00abface\u00bb par 0.</p> <p>Compl\u00e9ter le script Python suivant afin qu'il permette le calcul et l'affichage des valeurs prises par les variables al\u00e9atoires \\(X\\) et \\(Y\\) lors de l'exp\u00e9rience r\u00e9alis\u00e9e dans cet exercice.</p> <pre><code>import numpy as np\nimport numpy.random as rd\n\nx = ...\ny = ...\nlancer = rd.randint(0,2)\nif lancer == 1:\n    while lancer == 1:\n        lancer = rd.randint(0,2)\n        y = ...\nelse:\n    while lancer == 0:\n        lancer = rd.randint(0,2)\n        x = ...\n\nprint(x)\nprint(y)\n</code></pre>"},{"location":"TD07/TD07/","title":"TD07 : Suite des lois de probabilit\u00e9s","text":"<p>Exercice  1</p> <p>Lien vers le cours de SQL</p> <p>On \u00e9tudie une base de donn\u00e9es sur le cin\u00e9ma, qui poss\u00e8de deux tables, <code>movies</code> et <code>actors</code>.</p> <p></p> <ul> <li>la table <code>movies</code> poss\u00e8de un attribut <code>id</code> qui est sa cl\u00e9 primaire.</li> <li>la table <code>actors</code> poss\u00e8de un attribut <code>id</code> qui est sa cl\u00e9 primaire. Elle poss\u00e8de aussi un attribut <code>movie_id</code>, qui fait r\u00e9f\u00e9rence \u00e0 l'attribut <code>id</code> de la table <code>movies</code>. <code>movie_id</code> est donc une cl\u00e9 \u00e9trang\u00e8re.     </li> </ul> <p>Question 1</p> <p>Afficher le titre et le nom du r\u00e9alisateur de tous les films sortis en 2002.</p> Votre code SQL : Ex\u00e9cuter Correction <pre><code>SELECT title, director\nFROM movies\nWHERE year = 2002\n</code></pre> <p>Question 2</p> <p>Afficher le titre et l'ann\u00e9e de tous les films r\u00e9alis\u00e9s par Steven Spielberg, et dont le <code>metacritic_score</code> est strictement sup\u00e9rieur \u00e0 80.</p> Votre code SQL : Ex\u00e9cuter <pre></pre> Correction <pre><code>SELECT title, year\nFROM movies\nWHERE director = 'Steven Spielberg'\nAND  metacritic_score &gt; 80\n</code></pre> <p>Question 3</p> <p>Afficher le nom de tous les films dans lequel joue l'acteur Henry Fonda.</p> Votre code SQL : Ex\u00e9cuter <pre></pre> Correction <pre><code>SELECT movies.title\nFROM movies\nINNER JOIN actors ON movies.id = actors.movie_id\nWHERE name = 'Henry Fonda'\n</code></pre> <p>  Syntaxe des lois usuelles  </p> <p>Rappel : on utilise les simulateurs de lois du module <code>random</code> de la biblioth\u00e8que <code>numpy</code>. Ceci n\u00e9cessite syst\u00e9matiquement la pr\u00e9sence des deux lignes suivantes au d\u00e9but de chaque script : <pre><code>import numpy as np\nimport numpy.random as rd   \n</code></pre></p> <ul> <li> <p> loi uniforme : </p> <ul> <li><code>rd.random()</code> renvoie un r\u00e9el dans \\([0;1]\\) qui suit une loi uniforme (chaque r\u00e9el a la m\u00eame probabilit\u00e9 d'apparition)</li> <li><code>rd.randint(a,b)</code> renvoie un entier dans \\([a;b[\\) qui suit une loi uniforme (chaque entier a la m\u00eame probabilit\u00e9 d'apparition). Attention, la valeur \\(b\\) n'est pas prise. Ce qui signifie que pour un tirage al\u00e9atoire uniforme de 0 et de 1, il faut utiliser l'expression <code>rd.randint(0,2)</code>.</li> </ul> </li> <li> <p> loi binomiale : <code>rd.binomial(n,p)</code> renvoie un entier qui suit une loi binomiale de param\u00e8tre \\((n,p)\\). (\\(n\\) r\u00e9p\u00e9titions d'une \u00e9preuve de Bernoulli de param\u00e8tre \\(p\\))</p> </li> <li> <p> loi g\u00e9om\u00e9trique : <code>rd.geometric(p)</code> renvoie un entier qui suit une loi g\u00e9om\u00e9trique de param\u00e8tre \\(p\\) (nombre d'exp\u00e9riences de Bernoulli de param\u00e8tre \\(p\\) avant l'apparition du premier succ\u00e8s)</p> </li> <li> <p> loi exponentielle : <code>rd.exponential(1/lambda)</code> renvoie un r\u00e9el qui suit une loi exponentielle de param\u00e8tre <code>lambda</code>.</p> </li> </ul> <p> Comment renvoyer un vecteur plut\u00f4t qu'une seule valeur unique ? Il suffit de rajouter le nombre de simulations d\u00e9sir\u00e9es comme dernier param\u00e8tre dans la parenth\u00e8se.</p> <p>Exemple : Pour simuler 10 tirages al\u00e9atoires de nombres \u00e9gaux \u00e0 0 ou \u00e0 1, on utilisera : <pre><code>&gt;&gt;&gt; X = rd.randint(0,2,10)\n&gt;&gt;&gt; X\narray([0, 1, 0, 0, 1, 0, 0, 0, 1, 1])\n</code></pre></p> <p>Pour conna\u00eetre la valeur du 5\u00e8me tirage, on appelera : <pre><code>&gt;&gt;&gt; X[4]\n1\n</code></pre>  Ne pas oublier qu'on commence \u00e0 indexer \u00e0 0, donc le 5\u00e8me \u00e9l\u00e9ment est l'\u00e9l\u00e9ment d'indice 4...</p> <p> Lien pour ouvrir une console Python dans un nouvel onglet (sous Chrome de pr\u00e9f\u00e9rence)</p> <p>Exercice  2</p> <p>Q1. Simuler dans une variable <code>X</code> 50 lancers de d\u00e9. <pre><code>import numpy as np\nimport numpy.random as rd\n\nX = ...\n</code></pre></p> Correction <pre><code>import numpy as np\nimport numpy.random as rd\n\nX = rd.randint(1, 7, 50)\n</code></pre> <p>Q2. Compl\u00e9ter le code ci-dessous pour que s'affiche le nombre de fois o\u00f9 la valeur 6 a \u00e9t\u00e9 tir\u00e9e. <pre><code>import numpy as np\nimport numpy.random as rd\n\nX = ...\n\nn = 0\nfor k in range(50):\n    if ... == 6:\n        n = n + 1\n\nprint(...)\n</code></pre></p> Correction <pre><code>import numpy as np\nimport numpy.random as rd\n\nX = rd.randint(1, 7, 50)\nn = 0\nfor k in range(50):\nif X[k] == 6:\nn = n + 1\n\nprint(n)\n</code></pre> <p>Exercice  3</p> <p>d'apr\u00e8s Ecricome 2020</p> <p>Un bureau de poste dispose de deux guichets. Trois clients not\u00e9s \\(A\\), \\(B\\), \\(C\\) arrivent en m\u00eame temps. Les clients \\(A\\) et \\(B\\) se font servir tandis que \\(C\\) attend, puis effectue son op\u00e9ration d\u00e8s que l\u2019un des deux guichets se lib\u00e8re. On d\u00e9finit les variables al\u00e9atoires \\(X\\), \\(Y\\), \\(Z\\) \u00e9gales \u00e0 la dur\u00e9e en minutes de l\u2019op\u00e9ration des clients \\(A\\), \\(B\\) et \\(C\\) respectivement lorsqu\u2019ils sont au guichet. On fixe \\(a\\) et \\(b\\) deux r\u00e9els strictement positifs, et on suppose que \\(X\\) suit une loi exponentielle de param\u00e8tre \\(a\\), et que \\(Y\\) suit une loi exponentielle de param\u00e8tre \\(b\\).</p> <p>On suppose enfin que \\(X\\) et \\(Y\\) sont ind\u00e9pendantes.</p> <p>On note \\(T\\) la variable al\u00e9atoire \u00e9gale au temps d'attente en minutes du client \\(C\\) avant de parvenir \u00e0 un des guichets. La variable al\u00e9atoire \\(T\\) prend donc la plus petite des valeurs prises par \\(X\\) et \\(Y\\).</p> <p>On rappelle que, pour <code>n</code> un entier naturel non nul, et <code>lambda</code> un r\u00e9el strictement positif, l'instruction <code>rd.exponential(1/lambda, n)</code> simule <code>n</code> fois une variable al\u00e9atoire de loi exponentielle de param\u00e8tre <code>lambda</code> et stocke les <code>n</code> r\u00e9alisations ainsi obtenues dans un vecteur de taille <code>n</code>.</p> <p>On consid\u00e8re le code Python suivant :</p> <p><pre><code>import numpy as np\nimport numpy.random as rd\n\ndef simul(a, b):\n    X = rd.exponential(1/a, 10000)\n    Y = rd.exponential(1/a, 10000)\n    T = X\n    for k in range(10000):\n        if ... &gt; ...:\n            T[k] = ...\n    return T\n</code></pre> Q1. Compl\u00e9ter le code de la fonction <code>simul</code> pour qu'elle construise un vecteur <code>T</code> contenant 10000 r\u00e9alisations de la variable al\u00e9atoire \\(T\\).</p> Correction <pre><code>import numpy as np\nimport numpy.random as rd\n\ndef simul(a, b):\n    X = rd.exponential(1/a, 10000)\n    Y = rd.exponential(1/a, 10000)\n    T = X\n    for k in range(10000):\nif X[k] &gt; Y[k]:\nT[k] = Y[k]\nreturn T\n</code></pre> <p>Dans toute la suite de l'exercice, on suppose \\(a=b=\\frac{1}{2}\\), et on suppose que la variable al\u00e9atoire \\(Z\\) suit une loi exponentielle, de param\u00e8tre 1, la variable al\u00e9atoire \\(Z\\) \u00e9tant ind\u00e9pendante de \\(X\\) et \\(Y\\).</p> <p>On s'int\u00e9resse \u00e0 \\(V=T+Z\\) qui repr\u00e9sente le temps total pass\u00e9 par le client \\(C\\) dans la poste, attente et service compris.</p> <p>On s'int\u00e9resse \u00e0 la fonction Python suivante :</p> <pre><code>def simul2():\n    T = simul(1/2, 1/2)\n    Z = rd.exponential(1, 10000)\n    n = 0\n    for k in range(10000):\n        if T[k] + Z[k] &gt; 2:\n            n = n + 1\n    return n / 10000\n</code></pre> <p>On lance la fonction <code>simul2</code> plusieurs fois de suite, et on obtient les r\u00e9sultats suivants : </p> <pre><code>0.4045\n0.4151\n0.4221\n0.4096\n0.4188\n</code></pre> <p>Q2. Que retourne la fonction <code>simul2</code> ? On pourra utiliser la d\u00e9finition de la variable al\u00e9atoire \\(V\\).  </p> Correction <p>La fonction <code>simul2</code> retourne la fr\u00e9quence avec laquelle la variable al\u00e9atoire \\(V\\) prend des valeurs sup\u00e9rieures \u00e0 2. Sur une simulation de tr\u00e8s grande taille, cette fr\u00e9quence va donc se rapprocher de la valeur \\(P(V&gt;2)\\).</p> <p>On admet que \\(V\\) est encore une variable al\u00e9atoire \u00e0 densit\u00e9, admettant pour densit\u00e9 la fonction \\(g\\) d\u00e9finie par  :</p> \\[ \\forall x \\in \\mathbb{R}, \\quad g(x)= \\left\\{ \\begin{array}[l]{l} 0 \\qquad \\text{ si } x&lt;0 \\\\ x e^{-x} \\quad \\text{   si } x&gt;0 \\end{array} \\right. \\] <p>Q3. \u00c0 l'aide d'une int\u00e9gration par parties, montrer que pour tout r\u00e9el \\(A&gt;0\\) :</p> \\[ \\int_0^A g(x)dx = 1-e^{-A}-Ae^{-A}\\] Correction <p>\\(\\int_0^A g(x)dx = \\big[ -x e^{-x} \\big]_0^A - \\int_0^A -e^{-x}dx=-Ae^{-A}-\\big[e^{-x} \\big]_0^A=-Ae^{-A}-e^{-A}+1=1-e^{-A}-Ae^{-A}\\)</p> <p>Q4. V\u00e9rifier que \\(g\\) est bien une densit\u00e9 de probabilit\u00e9.</p> Correction <p>\\(\\int_{-\\infty}^{+\\infty} g(x)dx = \\int_{0}^{+\\infty} g(x)dx = \\lim_{A \\mapsto +\\infty} \\int_0^A g(x)dx = 1-e^{-A}-Ae^{-A}=1\\) Donc \\(g\\) est bien une densit\u00e9 de probabilit\u00e9.</p> <p>Q5. Calculer \\(P(V \\leqslant 2)\\). En d\u00e9duire la valeur de \\(P(V&gt;2)\\).</p> Correction <p>\\(P(V \\leqslant 2)=\\int_{-\\infty}^{2} g(x)dx=\\int_{0}^{2} g(x)dx=1-e^{-2}-2e^{-2}\\). Donc \\(P(V&gt;2)=1-P(V \\leqslant 2)=e^{-2}+2e^{-2}=3e^{-2} \\approx 0,406\\)</p> <p>Q6. Ce r\u00e9sultat est-il coh\u00e9rent avec les r\u00e9sultats Python de la question 2. ?</p> Correction <p>La valeur th\u00e9orique de \\(P(V&gt;2)\\) est conforme aux valeurs empiriques trouv\u00e9es par simulation \u00e0 la question 1 et 2.</p> <p>Exercice  4</p> <p>d'apr\u00e8s BCE ESC 2020</p> <p>Un mobile se d\u00e9place sur les points \u00e0 coordonn\u00e9es enti\u00e8res positives d'un axe d'origine \\(O\\). Au d\u00e9part, le mobile est \u00e0 l'origine (point d'abscisse 0). Le mobile se d\u00e9place selon la r\u00e8gle suivante : s'il est sur le point d'abscisse \\(k-1\\) (\\(k \\in \\mathbb{N}^*\\)) \u00e0 l'instant \\(n\\) (\\(n \\in \\mathbb{N}\\)), alors, \u00e0 l'instant \\(n+1\\), il sera sur le point d'abscisse \\(k\\) avec la probabilit\u00e9 \\(\\frac{k}{k+1}\\), ou sur le point d'abscisse 0 avec la probabilit\u00e9 \\(\\frac{1}{k+1}\\).</p> <p>On note \\(U\\) l'instant auquel le mobile se trouve pour la premi\u00e8re fois \u00e0 l'origine (sans compter son positionnement de d\u00e9part) et on admet que \\(U\\) est une variable al\u00e9atoire. </p> <p>Compl\u00e9ter les commandes du script Python suivant afin qu'il calcule et affiche la valeur prise par \\(U\\) lors de l'exp\u00e9rience al\u00e9atoire \u00e9tudi\u00e9e.</p> <pre><code>import numpy as np\nimport numpy.random as rd\n\nk = 1\nhasard = rd.randint(1, k+2)\nwhile hasard &lt; ...:\n    k = k + 1\n    hasard = ...\n\nprint('U a pris la valeur', ...)\n</code></pre> <p>Exercice  5</p> <p>d'apr\u00e8s BCE ESC 2020</p> <p>On effectue une succession de lancers (suppos\u00e9s ind\u00e9pendants) d'une pi\u00e8ce de monnaie \u00e9quilibr\u00e9e pour laquelle la probabilit\u00e9 d'obtenir \u00abpile\u00bb vaut \\(\\frac{1}{2}\\) et celle d'obtenir \u00abface\u00bb vaut aussi \\(\\frac{1}{2}\\).</p> <p>On consid\u00e8re aussi la variable al\u00e9atoire \\(X\\), \u00e9gale au rang d'apparition d'un premier \u00abpile\u00bb, et la variable al\u00e9atoire \\(Y\\), \u00e9gale au rang d'apparition du premier \u00abface\u00bb.</p> <p>On d\u00e9cide de coder \u00abpile\u00bb par 1 et \u00abface\u00bb par 0.</p> <p>Compl\u00e9ter le script Python suivant afin qu'il permette le calcul et l'affichage des valeurs prises par les variables al\u00e9atoires \\(X\\) et \\(Y\\) lors de l'exp\u00e9rience r\u00e9alis\u00e9e dans cet exercice.</p> <pre><code>import numpy as np\nimport numpy.random as rd\n\nx = ...\ny = ...\nlancer = rd.randint(0,2)\nif lancer == 1:\n    while lancer == 1:\n        lancer = rd.randint(0,2)\n        y = ...\nelse:\n    while lancer == 0:\n        lancer = rd.randint(0,2)\n        x = ...\n\nprint(x)\nprint(y)\n</code></pre> Correction <pre><code>import numpy as np\nimport numpy.random as rd\n\nx = 1\ny = 1\nlancer = rd.randint(0,2)\nif lancer == 1:\n    while lancer == 1:\n        lancer = rd.randint(0,2)\ny = y + 1\nelse:\n    while lancer == 0:\n        lancer = rd.randint(0,2)\nx = x + 1\nprint(x)\nprint(y)\n</code></pre>"},{"location":"TD08/TD08/","title":"TD08 : SQL, matrices, r\u00e9gression, simulations","text":""},{"location":"TD08/TD08/#1-entrainement-sql","title":"1. Entra\u00eenement SQL","text":"<p>Exercice  1</p> <p>Lien vers le cours de SQL</p> <p>On \u00e9tudie (encore) une base de donn\u00e9es sur le cin\u00e9ma, qui poss\u00e8de deux tables, <code>movies</code> et <code>actors</code>.</p> <p></p> <ul> <li>la table <code>movies</code> poss\u00e8de un attribut <code>id</code> qui est sa cl\u00e9 primaire.</li> <li>la table <code>actors</code> poss\u00e8de un attribut <code>id</code> qui est sa cl\u00e9 primaire. Elle poss\u00e8de aussi un attribut <code>movie_id</code>, qui fait r\u00e9f\u00e9rence \u00e0 l'attribut <code>id</code> de la table <code>movies</code>. <code>movie_id</code> est donc une cl\u00e9 \u00e9trang\u00e8re.     </li> </ul> <p>Question 1</p> <p>Afficher le titre et le nom du r\u00e9alisateur de tous les films fran\u00e7ais.</p> Votre code SQL : Ex\u00e9cuter Correction <pre><code>SELECT title, director FROM movies\nWHERE country = \"France\"\n</code></pre> <p>Question 2</p> <p>Le titre du film \u00abIntouchables\u00bb de Nakache et Toledano appara\u00eet comme \u00abThe Intouchables\u00bb. Modifier ce titre pour qu'il apparaisse sous le nom \u00abIntouchables\u00bb.</p> Votre code SQL : Ex\u00e9cuter <pre></pre> <p>V\u00e9rifier si votre modification est correcte :</p> Votre code SQL : Ex\u00e9cuter <pre></pre> Correction <pre><code>UPDATE movies\nSET title = \"Intouchables\"\nWHERE title = \"The Intouchables\"\n</code></pre> <p>Question 3</p> <p>Le r\u00e9alisateur Carl Theodor Dreyer est un r\u00e9alisateur Danois qui est manifestement l\u00e0 par erreur. Supprimer totalement de la table <code>movies</code> tous les films de ce r\u00e9alisateur.</p> Votre code SQL : Ex\u00e9cuter <pre></pre> Correction <pre><code>DELETE FROM movies\nWHERE director = \"Carl Theodor Dreyer\"\n</code></pre> <p>V\u00e9rifier si votre modification est correcte :</p> Votre code SQL : Ex\u00e9cuter <pre></pre> <p>Question 4</p> <p>Afficher le titre de tous les films dans lesquels a jou\u00e9 l'acteur Mathieu Kassovitz.</p> Votre code SQL : Ex\u00e9cuter <pre></pre> Correction <pre><code>SELECT title FROM movies\nINNER JOIN actors ON movies.id = actors.movie_id\nWHERE name = 'Mathieu Kassovitz'\"      </code></pre>"},{"location":"TD08/TD08/#2-retour-sur-les-matrices","title":"2. Retour sur les matrices","text":"<p>  Syntaxe des op\u00e9rations matricielles  </p> <p> Saisir une matrice La matrice  \\(A=\\begin{pmatrix} 1 &amp; 2 &amp; 3 \\\\ 4 &amp; 5 &amp; 6 \\\\ 7 &amp; 8 &amp; 9 \\end{pmatrix}\\) se saisira par le code suivant : <pre><code>import numpy as np\nA = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\n</code></pre> Saisir un vecteur Le vecteur  \\(X=\\begin{pmatrix} 1 \\\\ 2 \\\\ 3  \\end{pmatrix}\\) se saisira par le code suivant : <pre><code>X = np.array([[1], [2], [3]])\n</code></pre></p> <p> Effectuer un produit matriciel Le calcul du produit matriciel \\(A \\times X\\) se fera par le code suivant :  <pre><code>&gt;&gt;&gt; np.dot(A, X)\narray([[14],\n       [32],\n       [50]])\n</code></pre></p> <p>Exercice  2</p> <p>d'apr\u00e8s le sujet 0 n\u00b02 Ecricome 2023</p> <p>On note \\(B=\\begin{pmatrix} -1 &amp; 4 &amp; -1 \\\\ -2 &amp; 5 &amp; 2 \\\\ 0 &amp; 0 &amp; -2 \\end{pmatrix}\\), \\(P=\\begin{pmatrix} 1 &amp; 2 &amp; 1 \\\\ 0 &amp; 1 &amp; 1 \\\\ 1 &amp; 0 &amp; 0 \\end{pmatrix}\\), \\(Q=\\begin{pmatrix} 0 &amp; 0 &amp; 1 \\\\ 1 &amp; -1 &amp; -1 \\\\ -1 &amp; 2 &amp; 1 \\end{pmatrix}\\) et \\(D=\\begin{pmatrix} -2 &amp; 0 &amp; 0 \\\\ 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 3 \\end{pmatrix}\\),</p> <p>Q1. Cr\u00e9er en Python la variable <code>B</code> correspondant \u00e0 la matrice \\(B\\), ainsi que les variables <code>X1</code>, <code>X2</code>, <code>X3</code> correspondant respectivement aux vecteurs \\(X_1\\), \\(X_2\\) et \\(X_3\\) ci-dessous :</p> <p>\\(X_1=\\begin{pmatrix} 1  \\\\ 0  \\\\ 1  \\end{pmatrix}\\), \\(X_2=\\begin{pmatrix} 2  \\\\ 1  \\\\ 0  \\end{pmatrix}\\), \\(X_3=\\begin{pmatrix} 1  \\\\ 1  \\\\ 0  \\end{pmatrix}\\)</p> Correction <pre><code>import numpy as np\n\nB = np.array([[-1, 4, -1], [-2, 5, 2], [0, 0, -2]])\nX1 = np.array([[1], [0], [1]])\nX2 = np.array([[2], [1], [0]])\nX3 = np.array([[1], [1], [0]])\n</code></pre> <p>Q2. Par des calculs en Python, montrer que les vecteurs \\(X_1\\), \\(X_2\\) et \\(X_3\\) sont des vecteurs propres de la matrice \\(B\\), et pr\u00e9ciser pour chacun la valeur propre associ\u00e9e.</p> Correction <p><pre><code>&gt;&gt;&gt; np.dot(B, X1)\narray([[-2],  [0], [-2]])\n&gt;&gt;&gt; np.dot(B, X2)\narray([[2], [1], [0]])\n&gt;&gt;&gt; np.dot(B, X3)\narray([[3], [3], [0]])\n</code></pre> On en d\u00e9duit que :</p> <ul> <li>\\(BX_1 = 2X_1\\), donc \\(X_1\\) est un vecteur propre associ\u00e9 \u00e0 la valeur propre 2.</li> <li>\\(BX_2 = X_2\\), donc \\(X_2\\) est un vecteur propre associ\u00e9 \u00e0 la valeur propre 1.</li> <li>\\(BX_3 = 3X_3\\), donc \\(X_3\\) est un vecteur propre associ\u00e9 \u00e0 la valeur propre 3.</li> </ul> <p>Q3. On consid\u00e8re le script Python suivant : <pre><code>import numpy as np\n\nI = np.eye(3)\nB = np.array([[-1, 4, -1], [-2, 5, 2], [0, 0, -2]])\nP = np.array([[1, 2, 1], [0, 1, 1], [1, 0, 0]])\nQ = np.array([[0, 0, 1], [1, -1, -1], [-1, 2, 1]])\nR = np.dot(P, Q) - I\nS = np.dot(Q, np.dot(B, P))\n\nprint(R)\nprint(S)\n</code></pre> \u00c0 son ex\u00e9cution, on obtient : <pre><code>[[0. 0. 0.]\n [0. 0. 0.]\n [0. 0. 0.]]\n[[-2  0  0]\n [ 0  1  0]\n [ 0  0  3]]\n</code></pre></p> <p>Que peut-on en conjecturer sur la matrice \\(P\\) ? sur la matrice \\(D\\) ?</p> correction <ul> <li> <p>On remarque que la matrice \\(R\\) est une matrice nulle. Comme \\(R=PQ-I\\), cela signifie que \\(PQ=I\\) et donc que \\(P\\) et \\(Q\\) sont deux matrices inverses.  </p> </li> <li> <p>On remarque que la matrice \\(S\\) est \u00e9gale \u00e0 la matrice \\(D\\). Donc \\(D=QBP=P^{-1}BP\\). Or la matrice \\(P\\) est form\u00e9e des trois vecteurs propres \\(X_1\\), \\(X_2\\) et \\(X_3\\) de la matrice \\(B\\), c'est donc sa matrice de passage. Le calcul \\(P^{-1}BP\\) va donc donner la matrice diagonale associ\u00e9e \u00e0 \\(B\\). On reconna\u00eet d'ailleurs que \\(D\\) est bien form\u00e9e des 3 valeurs propres trouv\u00e9es \u00e0 la question pr\u00e9c\u00e9dente.</p> </li> </ul>"},{"location":"TD08/TD08/#3-regression-lineaire","title":"3. R\u00e9gression lin\u00e9aire","text":"<p>Coefficient de corr\u00e9lation lin\u00e9aire de deux variables al\u00e9atoires</p> <p> D\u00e9finition Le coefficient de corr\u00e9lation lin\u00e9aire de deux variables al\u00e9atoires \\(X\\) et \\(Y\\) est le r\u00e9el \\(\\rho(X,Y)\\) donn\u00e9 par la formule :</p> \\[\\rho(X,Y) = \\dfrac{Cov(X,Y)}{\\sqrt{V(X)}\\sqrt{V(Y)}}\\] <p> Interpr\u00e9tation </p> <ul> <li>Si \\(X\\) et \\(Y\\) sont ind\u00e9pendantes, alors \\(\\rho(X,Y) = 0\\)</li> <li>Si \\(X\\) et \\(Y\\) sont li\u00e9es par une combinaison lin\u00e9aire (ex : \\(Y = 3X+2\\)), alors \\(\\rho(X,Y) = \\pm 1\\)</li> </ul> <p> Utilisation en statistiques  Lorsque \\(\\rho\\) est proche de 1, on peut conjecturer que le ph\u00e9nom\u00e8ne observ\u00e9 est pr\u00e9dictible. Le trac\u00e9 de la droite de r\u00e9gression permet alors de faire des pr\u00e9visions.</p> <p>Syntaxe Python  </p> <p> Calcul du coefficient de corr\u00e9lation : <code>np.corrcoef(x,y)[0,1]</code></p> <p>Consid\u00e9rons le code suivant :</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nplt.clf()\n\nx = np.array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,\n       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49])\n\ny = np.array([ 0,  1,  7,  1,  4, 17,  7,  4, 18, 10, 11, 11, 16, 15, 19, 19, 20,\n       25, 33, 23, 26, 44, 27, 34, 35, 34, 32, 46, 32, 38, 44, 47, 43, 49,\n       41, 52, 40, 59, 55, 58, 69, 66, 67, 71, 71, 68, 76, 75, 71, 68])\n\ncoeff = np.corrcoef(x,y)[0,1]\n\nplt.scatter(x,y)\nprint(coeff)\n\nplt.show()\n</code></pre> <p>Le trac\u00e9 laisse appara\u00eetre une distribution des points qui semblent \u00eatre situ\u00e9s autour d'une droite. Ceci est confirm\u00e9 par le calcul du coefficient de corr\u00e9lation lin\u00e9aire ( calcul\u00e9 par l'instruction <code>np.corrcoef(x,y)[0,1]</code>  )</p> <p></p> <p> Calcul et trac\u00e9 du point moyen : <code>np.mean(x)</code></p> <p>La fonction <code>np.mean(x)</code> permet de calculer la valeur moyenne d'un ensemble de valeurs stock\u00e9es dans la variable <code>x</code>.</p> <p>Le point moyen d'une s\u00e9rie statistique double peut donc se tracer par : <pre><code>plt.plot([np.mean(x)], [np.mean(y)], 'r+') \n</code></pre></p> <p></p> <p> Trac\u00e9 de la droite de r\u00e9gression : <code>a, b = np.polyfit(x, y, 1)</code></p> <ul> <li>Le calcul du coefficient directeur <code>a</code> et de l'ordonn\u00e9e \u00e0 l'origine <code>b</code> de la droite de r\u00e9gression se fait par la commande   <code>a, b = np.polyfit(x, y, 1)</code> </li> <li>Le trac\u00e9 de la droite se fait par <code>plt.plot(a*x + b)</code></li> </ul> <p>Ins\u00e9rer les lignes : <pre><code>a, b = np.polyfit(x, y, 1)\nplt.plot(x, a*x + b, 'g-')\n</code></pre> dans le code pr\u00e9c\u00e9dent. On obtient alors : </p> <p>Exercice  3</p> <p>d'apr\u00e8s Math\u00e9matiques Dunod</p> <p>En 2019, l'ONU pr\u00e9voyait que la population mondiale attendrait 10 milliards d'habitants en 2057. On se propose de v\u00e9rifier ce r\u00e9sultat. L'\u00e9volution de la population mondiale depuis 1950 est donn\u00e9e dans le tableau ci-dessous (en haut : l'ann\u00e9e, en bas : la population en milliards d'habitants)</p> 1950 1955 1960 1965 1970 1975 1980 1985 1990 1995 2000 2005 2010 2015 2020 2,54 2,77 3,03 3,34 3,70 4,08 4,46 4,87 5,33 5,74 6,14 6,54 6,96 7,38 7,80 <p>On note \\(X\\) et \\(Y\\) les variables \u00e9gales respectivement \u00e0 l'ann\u00e9e et au nombre d'habitants dans le monde (en milliards). On note \\(x\\) et \\(y\\) les s\u00e9ries statistiques respectivement associ\u00e9es.</p> <p>Q1. \u00c9crire les commandes Python permettant de repr\u00e9senter le nuage de points associ\u00e9 \u00e0 la s\u00e9rie double \\((x,y)\\) et marquer le point moyen du nuage par une croix rouge.</p> correction <p><pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.arange(1950, 2025, 5)\ny = np.array([2.54, 2.77, 3.03, 3.34, 3.70, 4.08, 4.46, 4.87, 5.33, 5.74, 6.14, 6.54, 6.96, 7.38, 7.80])\n\nplt.scatter(x,y)\nplt.plot([np.mean(x)], [np.mean(y)], 'r+') \n\nplt.show()\n</code></pre> </p> <p>Q2. Pr\u00e9voir le signe du coefficient de corr\u00e9lation lin\u00e9aire de la s\u00e9rie double \\((x,y)\\).</p> correction <p>Plus l'ann\u00e9e augmente, plus la population augmente : \\(\\rho\\) sera donc positif.</p> <p>Q3. Calculer le coefficient de corr\u00e9lation lin\u00e9aire et tracer la droite de r\u00e9gression.</p> correction <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.arange(1950, 2025, 5)\ny = np.array([2.54, 2.77, 3.03, 3.34, 3.70, 4.08, 4.46, 4.87, 5.33, 5.74, 6.14, 6.54, 6.96, 7.38, 7.80])\n\n\ncoeff = np.corrcoef(x,y)[0,1]\n\na, b = np.polyfit(x, y, 1)\nplt.plot(x, a*x + b, color=\"green\")\n\nplt.scatter(x,y)\nplt.plot([np.mean(x)], [np.mean(y)], 'r+') \nprint(coeff)\n\n\nplt.show()\n</code></pre> <p>Coefficient de corr\u00e9lation lin\u00e9aire : <pre><code>&gt;&gt;&gt; coeff\n0.9979169799754183\n</code></pre></p> <p> </p> <p>Q4. \u00c0 l'aide des coefficients \\(a\\) et \\(b\\) de la droite de r\u00e9gression, conjecturer la population mondiale en 2050 et v\u00e9rifier la pr\u00e9vision de l'ONU.</p> correction <pre><code>&gt;&gt;&gt; a\n0.07745714285714277\n&gt;&gt;&gt; b\n-148.77376190476173\n&gt;&gt;&gt; a*2050 + b\n10.013380952380942\n</code></pre> <p>La pr\u00e9vision de l'ONU est donc compatible avec notre simulation.</p>"},{"location":"TD08/TD08/#4-retour-sur-les-simulations","title":"4. Retour sur les simulations","text":"<p>  Syntaxe des lois usuelles  </p> <p>Rappel : on utilise les simulateurs de lois du module <code>random</code> de la biblioth\u00e8que <code>numpy</code>. Ceci n\u00e9cessite syst\u00e9matiquement la pr\u00e9sence des deux lignes suivantes au d\u00e9but de chaque script : <pre><code>import numpy as np\nimport numpy.random as rd   \n</code></pre></p> <ul> <li> <p> loi uniforme : </p> <ul> <li><code>rd.random()</code> renvoie un r\u00e9el dans \\([0;1]\\) qui suit une loi uniforme (chaque r\u00e9el a la m\u00eame probabilit\u00e9 d'apparition)</li> <li><code>rd.randint(a,b)</code> renvoie un entier dans \\([a;b[\\) qui suit une loi uniforme (chaque entier a la m\u00eame probabilit\u00e9 d'apparition). Attention, la valeur \\(b\\) n'est pas prise. Ce qui signifie que pour un tirage al\u00e9atoire uniforme de 0 et de 1, il faut utiliser l'expression <code>rd.randint(0,2)</code>.</li> </ul> </li> <li> <p> loi binomiale : <code>rd.binomial(n,p)</code> renvoie un entier qui suit une loi binomiale de param\u00e8tre \\((n,p)\\). (\\(n\\) r\u00e9p\u00e9titions d'une \u00e9preuve de Bernoulli de param\u00e8tre \\(p\\))</p> </li> <li> <p> loi g\u00e9om\u00e9trique : <code>rd.geometric(p)</code> renvoie un entier qui suit une loi g\u00e9om\u00e9trique de param\u00e8tre \\(p\\) (nombre d'exp\u00e9riences de Bernoulli de param\u00e8tre \\(p\\) avant l'apparition du premier succ\u00e8s)</p> </li> <li> <p> loi exponentielle : <code>rd.exponential(1/lambda)</code> renvoie un r\u00e9el qui suit une loi exponentielle de param\u00e8tre <code>lambda</code>.</p> </li> </ul> <p> Comment renvoyer un vecteur plut\u00f4t qu'une seule valeur unique ? Il suffit de rajouter le nombre de simulations d\u00e9sir\u00e9es comme dernier param\u00e8tre dans la parenth\u00e8se.</p> <p>Exemple : Pour simuler 10 tirages al\u00e9atoires de nombres \u00e9gaux \u00e0 0 ou \u00e0 1, on utilisera : <pre><code>&gt;&gt;&gt; X = rd.randint(0,2,10)\n&gt;&gt;&gt; X\narray([0, 1, 0, 0, 1, 0, 0, 0, 1, 1])\n</code></pre></p> <p>Pour conna\u00eetre la valeur du 5\u00e8me tirage, on appelera : <pre><code>&gt;&gt;&gt; X[4]\n1\n</code></pre>  Ne pas oublier qu'on commence \u00e0 indexer \u00e0 0, donc le 5\u00e8me \u00e9l\u00e9ment est l'\u00e9l\u00e9ment d'indice 4...</p> <p> Lien pour ouvrir une console Python dans un nouvel onglet (sous Chrome de pr\u00e9f\u00e9rence)</p> <p>Exercice  4</p> <p>d'apr\u00e8s BCE ESC 2020</p> <p>Un mobile se d\u00e9place sur les points \u00e0 coordonn\u00e9es enti\u00e8res positives d'un axe d'origine \\(O\\). Au d\u00e9part, le mobile est \u00e0 l'origine (point d'abscisse 0). Le mobile se d\u00e9place selon la r\u00e8gle suivante : s'il est sur le point d'abscisse \\(k-1\\) (\\(k \\in \\mathbb{N}^*\\)) \u00e0 l'instant \\(n\\) (\\(n \\in \\mathbb{N}\\)), alors, \u00e0 l'instant \\(n+1\\), il sera sur le point d'abscisse \\(k\\) avec la probabilit\u00e9 \\(\\frac{k}{k+1}\\), ou sur le point d'abscisse 0 avec la probabilit\u00e9 \\(\\frac{1}{k+1}\\).</p> <p>On note \\(U\\) l'instant auquel le mobile se trouve pour la premi\u00e8re fois \u00e0 l'origine (sans compter son positionnement de d\u00e9part) et on admet que \\(U\\) est une variable al\u00e9atoire. </p> <p>Compl\u00e9ter les commandes du script Python suivant afin qu'il calcule et affiche la valeur prise par \\(U\\) lors de l'exp\u00e9rience al\u00e9atoire \u00e9tudi\u00e9e.</p> <pre><code>import numpy as np\nimport numpy.random as rd\n\nk = 1\nhasard = rd.randint(1, k+2)\nwhile hasard &lt; ...:\n    k = k + 1\n    hasard = ...\n\nprint('U a pris la valeur', ...)\n</code></pre>"},{"location":"TD09/TD09/","title":"TD09 : retour du SQL, r\u00e9gression, simulations","text":""},{"location":"TD09/TD09/#1-entrainement-sql","title":"1. Entra\u00eenement SQL","text":"<p>Exercice  1</p> <p>Lien vers le cours de SQL</p> <p>On \u00e9tudie une base de donn\u00e9es <code>parc</code>, relative \u00e0 un parc automobile. Cette base poss\u00e8de deux tables, <code>personnes</code> et <code>voitures</code>.</p> <ul> <li> <p>la table <code>personnes</code> poss\u00e8de comme attributs :</p> <ul> <li><code>id</code> : un num\u00e9ro d'identification unique pour chaque personne.</li> <li><code>nom</code>, <code>prenom</code>, <code>code_postal</code>, <code>ville</code> </li> </ul> </li> <li> <p>la table <code>voitures</code> poss\u00e8de  comme attributs :</p> <ul> <li><code>immatriculation</code> : le num\u00e9ro d'immatriculation unique pour chaque voiture</li> <li><code>modele</code>, <code>marque</code>, <code>couleur</code></li> <li><code>proprietaire</code> : cet attribut fait r\u00e9f\u00e9rence \u00e0 l'attribut <code>id</code> de la table <code>personnes</code>.      </li> </ul> </li> </ul> <p>Questions 0</p> <ol> <li>Quel r\u00f4le joue l'attribut <code>immatriculation</code> dans la table <code>voitures</code> ?  </li> <li>Quel r\u00f4le joue l'attribut <code>proprietaire</code> dans la table <code>voitures</code> ? </li> </ol> Correction <ol> <li><code>immatriculation</code> est la cl\u00e9 primaire la table <code>voitures</code>. </li> <li><code>proprietaire</code> une cl\u00e9 \u00e9trang\u00e8re de la table <code>voitures</code>, elle fait r\u00e9f\u00e9rence \u00e0 la cl\u00e9 primaire <code>id</code> de la table <code>personnes</code>. </li> </ol> <p>Question 1</p> <p>Afficher tout le contenu de la table <code>personnes</code>.</p> Votre code SQL : Ex\u00e9cuter Correction <pre><code>SELECT *\nFROM personnes     </code></pre> <p>Question 2</p> <p>Afficher tout le contenu de la table <code>voitures</code>.</p> Votre code SQL : Ex\u00e9cuter <pre></pre> Correction <pre><code>SELECT *\nFROM voitures     </code></pre> <p>Question 3</p> <p>Donner la plaque d'immatriculation de la voiture rose.</p> Votre code SQL : Ex\u00e9cuter <pre></pre> Correction <pre><code>SELECT immatriculation FROM voitures\nWHERE couleur = 'Rose'     </code></pre> <p>Question 4</p> <p>Ins\u00e9rer dans la table <code>personnes</code> l'individu Gerard Berry, habitant \u00e0 Bordeaux (33000) ayant pour <code>id</code> la valeur 5. </p> Votre code SQL : Ex\u00e9cuter <pre></pre> <p>Pour v\u00e9rifier si la table a bien \u00e9t\u00e9 modifi\u00e9e :</p> Votre code SQL : Ex\u00e9cuter <pre></pre> Correction <pre><code>INSERT INTO personnes\nVALUES (5, \"Berry\", \"G\u00e9rard\", 33000, \"Bordeaux\")     </code></pre> <p>Question 5</p> <p>Donner le nom et le pr\u00e9nom du propri\u00e9taire de la Porsche.</p> Votre code SQL : Ex\u00e9cuter <pre></pre> Correction <pre><code>SELECT nom, prenom FROM personnes\nINNER JOIN voitures ON voitures.proprietaire = personnes.id\nWHERE marque = \"Porsche\"     </code></pre>"},{"location":"TD09/TD09/#2-retour-sur-la-regression-lineaire","title":"2. Retour sur la r\u00e9gression lin\u00e9aire","text":"<p>Coefficient de corr\u00e9lation lin\u00e9aire de deux variables al\u00e9atoires</p> <p> D\u00e9finition Le coefficient de corr\u00e9lation lin\u00e9aire de deux variables al\u00e9atoires \\(X\\) et \\(Y\\) est le r\u00e9el \\(\\rho(X,Y)\\) donn\u00e9 par la formule :</p> \\[\\rho(X,Y) = \\dfrac{Cov(X,Y)}{\\sqrt{V(X)}\\sqrt{V(Y)}}\\] <p> Interpr\u00e9tation </p> <ul> <li>Si \\(X\\) et \\(Y\\) sont ind\u00e9pendantes, alors \\(\\rho(X,Y) = 0\\)</li> <li>Si \\(X\\) et \\(Y\\) sont li\u00e9es par une combinaison lin\u00e9aire (ex : \\(Y = 3X+2\\)), alors \\(\\rho(X,Y) = \\pm 1\\)</li> </ul> <p> Utilisation en statistiques  Lorsque \\(\\rho\\) est proche de 1, on peut conjecturer que le ph\u00e9nom\u00e8ne observ\u00e9 est pr\u00e9dictible. Le trac\u00e9 de la droite de r\u00e9gression permet alors de faire des pr\u00e9visions.</p> <p>Syntaxe Python  </p> <p> Calcul du coefficient de corr\u00e9lation : <code>np.corrcoef(x,y)[0,1]</code></p> <p>Consid\u00e9rons le code suivant :</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nplt.clf()\n\nx = np.array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,\n       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49])\n\ny = np.array([ 0,  1,  7,  1,  4, 17,  7,  4, 18, 10, 11, 11, 16, 15, 19, 19, 20,\n       25, 33, 23, 26, 44, 27, 34, 35, 34, 32, 46, 32, 38, 44, 47, 43, 49,\n       41, 52, 40, 59, 55, 58, 69, 66, 67, 71, 71, 68, 76, 75, 71, 68])\n\ncoeff = np.corrcoef(x,y)[0,1]\n\nplt.scatter(x,y)\nprint(coeff)\n\nplt.show()\n</code></pre> <p>Le trac\u00e9 laisse appara\u00eetre une distribution des points qui semblent \u00eatre situ\u00e9s autour d'une droite. Ceci est confirm\u00e9 par le calcul du coefficient de corr\u00e9lation lin\u00e9aire ( calcul\u00e9 par l'instruction <code>np.corrcoef(x,y)[0,1]</code>  )</p> <p></p> <p> Calcul et trac\u00e9 du point moyen : <code>np.mean(x)</code></p> <p>La fonction <code>np.mean(x)</code> permet de calculer la valeur moyenne d'un ensemble de valeurs stock\u00e9es dans la variable <code>x</code>.</p> <p>Le point moyen d'une s\u00e9rie statistique double peut donc se tracer par : <pre><code>plt.plot([np.mean(x)], [np.mean(y)], 'r+') \n</code></pre></p> <p></p> <p> Trac\u00e9 de la droite de r\u00e9gression : <code>a, b = np.polyfit(x, y, 1)</code></p> <ul> <li>Le calcul du coefficient directeur <code>a</code> et de l'ordonn\u00e9e \u00e0 l'origine <code>b</code> de la droite de r\u00e9gression se fait par la commande </li> </ul> <p> <code>a, b = np.polyfit(x, y, 1)</code> </p> <ul> <li>Le trac\u00e9 de la droite se fait par <code>plt.plot(x, a*x + b)</code></li> </ul> <p>Ins\u00e9rer les lignes : <pre><code>a, b = np.polyfit(x, y, 1)\nplt.plot(x, a*x + b, 'g-')\n</code></pre> dans le code pr\u00e9c\u00e9dent. On obtient alors : </p> <p>Exercice  2</p> <p>Pour chaque question :</p> <ul> <li>Repr\u00e9senter le nuage de points de la s\u00e9rie statistique.</li> <li>Calculer le coefficient de corr\u00e9lation lin\u00e9aire.</li> <li>Dire si un ajustement lin\u00e9aire est possible. </li> <li>Si oui, repr\u00e9senter la droite de r\u00e9gression et faire une estimation de la valeur de <code>y</code> pour <code>x = 30</code>.</li> </ul> <p>Q1.</p> <pre><code>x = np.array([0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\ny = np.array([0, 17, 11, 15, 15, 2, 7, 18, 0, 6, 9, 10, 9, 5, 16, 17, 7, 0, 18, 4])\n</code></pre> <p>Q2.</p> <pre><code>x = np.array([0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\ny = np.array([108, 75, 58, 57, 42, 38, 29, 16, -9, 5, 5, 1, -10, 13, 7, 39, 38, 42, 72, 70])\n</code></pre> <p>Q3.</p> <pre><code>x = np.array([0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\ny = np.array([346, 343, 322, 321, 302, 301, 287, 269, 272, 257, 257, 249, 226, 227, 208, 201, 175, 191, 169, 158])\n</code></pre> <p>  Hors Programme   retour sur la question Q2</p> <p>Le nuage de points obtenu en Q2 ne donne absolument pas envie de faire un ajustement lin\u00e9aire : la forme du nuage ne ressemble pas du tout \u00e0 une droite.</p> <p>Par contre, elle ressemble \u00e0 une parabole... </p> <p>Peut-on ajuster cette s\u00e9rie statistique avec un polyn\u00f4me de degr\u00e9 2 ? Essayons ! Il faut pour cela se servir de la fonction <code>polyfit</code> et lui demander les 3 coefficients du polyn\u00f4me de degr\u00e9 2 qui \u00abfitte\u00bb le mieux notre nuage :</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nplt.clf()\n\nx = np.array([0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])\ny = np.array([108, 75, 58, 57, 42, 38, 29, 16, -9, 5, 5, 1, -10, 13, 7, 39, 38, 42, 72, 70])\n\nplt.scatter(x,y)\n\na, b, c = np.polyfit(x, y, 2)\nplt.plot(x, a*x**2 + b*x + c, 'r-')\n\n\nplt.show()\n</code></pre> <p></p> <p><pre><code>&gt;&gt;&gt; a*30**2 + b*30 + c\n383.80943267259056\n</code></pre> On peut alors estimer que quand <code>x</code> vaudra 30, <code>y</code> vaudra environ 383. </p> <p>Mais alors, en augmentant le degr\u00e9, ne peut-on pas obtenir un ajustement parfait ???</p> <p> R\u00e9ponse : si, on peut, mais c'est mal.</p> <p>Exemple</p> <p>Prenons ce nuage de points : </p> <p>On peut le fitter assez proprement avec une parabole :</p> <p></p> <p>Mais <code>polyfit</code> est capable de mieux ! Il peut nous donner les coefficients du polyn\u00f4me de degr\u00e9 6 qui passera parfaitement par les 7 points :</p> <pre><code>a, b, c, d, e, f, g = np.polyfit(x, y, 6)\n</code></pre> <p>Tra\u00e7ons donc la courbe du polyn\u00f4me <code>a*x**6 + b*x**5 + c*x**4 + d*x**3 + e*x**2 + f*x + g</code> :</p> <p></p> <p>C'est parfait pour les valeurs donn\u00e9es... mais tr\u00e8s bizarre d\u00e8s qu'on sort de ces valeurs.</p> <p> \u00c0 trop vouloir coller aux valeurs donn\u00e9es, on a perdu le \u00absens\u00bb de la s\u00e9rie statistique, et nos pr\u00e9visions risquent d'\u00eatre totalement fausses. On appelle ce ph\u00e9nom\u00e8ne l'overfitting, ou sur-apprentissage en Intelligence Artificielle. Une interpr\u00e9tation dans la vie courante pourrait \u00eatre que lorsque vous savez trop parfaitement quelque chose, il y a un risque d'en perdre le sens et donc de ne pas pouvoir s'adapter en cas de l\u00e9ger d\u00e9calage par rapport \u00e0 ce que vous attendez.</p>"},{"location":"TD09/TD09/#3-retour-sur-les-simulations","title":"3. Retour sur les simulations","text":"<p>  Syntaxe des lois usuelles  </p> <p>Rappel : on utilise les simulateurs de lois du module <code>random</code> de la biblioth\u00e8que <code>numpy</code>. Ceci n\u00e9cessite syst\u00e9matiquement la pr\u00e9sence des deux lignes suivantes au d\u00e9but de chaque script : <pre><code>import numpy as np\nimport numpy.random as rd   \n</code></pre></p> <ul> <li> <p> loi uniforme : </p> <ul> <li><code>rd.random()</code> renvoie un r\u00e9el dans \\([0;1]\\) qui suit une loi uniforme (chaque r\u00e9el a la m\u00eame probabilit\u00e9 d'apparition)</li> <li><code>rd.randint(a,b)</code> renvoie un entier dans \\([a;b[\\) qui suit une loi uniforme (chaque entier a la m\u00eame probabilit\u00e9 d'apparition). Attention, la valeur \\(b\\) n'est pas prise. Ce qui signifie que pour un tirage al\u00e9atoire uniforme de 0 et de 1, il faut utiliser l'expression <code>rd.randint(0,2)</code>.</li> </ul> </li> <li> <p> loi binomiale : <code>rd.binomial(n,p)</code> renvoie un entier qui suit une loi binomiale de param\u00e8tre \\((n,p)\\). (\\(n\\) r\u00e9p\u00e9titions d'une \u00e9preuve de Bernoulli de param\u00e8tre \\(p\\))</p> </li> <li> <p> loi g\u00e9om\u00e9trique : <code>rd.geometric(p)</code> renvoie un entier qui suit une loi g\u00e9om\u00e9trique de param\u00e8tre \\(p\\) (nombre d'exp\u00e9riences de Bernoulli de param\u00e8tre \\(p\\) avant l'apparition du premier succ\u00e8s)</p> </li> <li> <p> loi exponentielle : <code>rd.exponential(1/lambda)</code> renvoie un r\u00e9el qui suit une loi exponentielle de param\u00e8tre <code>lambda</code>.</p> </li> <li> <p> loi de Poisson : <code>rd.poisson(lambda)</code> renvoie un entier qui suit une loi de Poisson de param\u00e8tre <code>lambda</code>.</p> </li> </ul> <p> Comment renvoyer un vecteur plut\u00f4t qu'une seule valeur unique ? Il suffit de rajouter le nombre de simulations d\u00e9sir\u00e9es comme dernier param\u00e8tre dans la parenth\u00e8se.</p> <p>Exemple : Pour simuler 10 tirages al\u00e9atoires de nombres \u00e9gaux \u00e0 0 ou \u00e0 1, on utilisera : <pre><code>&gt;&gt;&gt; X = rd.randint(0,2,10)\n&gt;&gt;&gt; X\narray([0, 1, 0, 0, 1, 0, 0, 0, 1, 1])\n</code></pre></p> <p>Pour conna\u00eetre la valeur du 5\u00e8me tirage, on appelera : <pre><code>&gt;&gt;&gt; X[4]\n1\n</code></pre>  Ne pas oublier qu'on commence \u00e0 indexer \u00e0 0, donc le 5\u00e8me \u00e9l\u00e9ment est l'\u00e9l\u00e9ment d'indice 4...</p> <p> Lien pour ouvrir une console Python dans un nouvel onglet (sous Chrome de pr\u00e9f\u00e9rence)</p> <p>Exercice  3</p> <p>On se propose dans cet exercice de retrouver empiriquement la formule th\u00e9orique du calcul de probabilit\u00e9s d'une variable \\(X\\) suivant une loi de Poisson de param\u00e8tre \\(\\lambda\\) :</p> \\[\\forall k \\in \\mathbb{N}, \\qquad P(X=k)=\\dfrac{\\lambda ^k}{k!} e^{-\\lambda}\\] <p>Q1. Compl\u00e9ter le code ci-dessous afin que la fonction <code>formule_poisson</code> qui prend pour param\u00e8tres deux entiers :  </p> <ul> <li><code>lamb</code> : le param\u00e8tre de la loi de Poisson</li> <li><code>k</code> : le nombre dont on veut tester la probabilit\u00e9 d'apparition lors d'une loi de Poisson</li> </ul> <p>renvoie la probabilit\u00e9 que \\(X\\) soit \u00e9gal \u00e0 <code>k</code> si \\(X\\) suit une loi de Poisson de param\u00e8tre <code>lamb</code>. </p> <pre><code>from math import factorial, exp\n\ndef formule_poisson(lamb, k):\n    return (...**... / factorial(...)) * exp(...)\n</code></pre> Correction Q1. <pre><code>from math import factorial, exp\n\ndef formule_poisson(lamb, k):\nreturn (lamb**k / factorial(k)) * exp(-lamb)\n</code></pre> <p>Q2. On va maintenant calculer de mani\u00e8re empirique cette probabilit\u00e9, gr\u00e2ce \u00e0 la loi des grands nombres.</p> <p>Compl\u00e9ter le code ci-dessous afin que la fonction <code>empirique_poisson</code> qui prend pour param\u00e8tres 3 entiers :  </p> <ul> <li><code>lamb</code> : le param\u00e8tre de la loi de Poisson</li> <li><code>k</code> : le nombre dont on veut tester la probabilit\u00e9 d'apparition lors d'une loi de Poisson</li> <li><code>nb_iter</code> : le nombre d'it\u00e9rations</li> </ul> <p>renvoie la fr\u00e9quence d'apparition de la valeur <code>k</code> lors de <code>nb_iter</code> it\u00e9rations d'un tirage par la fonction Python <code>rd.poisson</code>. </p> <pre><code>import numpy as np\nimport numpy.random as rd\n\ndef empirique_poisson(lamb, k, nb_iter):\n    s = 0\n    for _ in range(...):\n        tirage = rd.poisson(...)\n        if tirage == ...:\n            ... += ...\n    return ... / ...\n</code></pre> Correction Q2. <pre><code>import numpy as np\nimport numpy.random as rd\n\ndef empirique_poisson(lamb, k, nb_iter):\n    s = 0\nfor _ in range(nb_iter):\ntirage = rd.poisson(lamb)\nif tirage == k:\ns += 1\nreturn s / nb_iter\n</code></pre> <p>Q3. Comparer ces deux fonctions avec (par exemple) <code>lamb</code> \u00e9gal \u00e0 10, <code>k</code> \u00e9gal \u00e0 7 et une valeur <code>nb_iter</code> que vous adapterez.</p> Correction Q3. <p><pre><code>&gt;&gt;&gt; formule_poisson(10, 7)\n0.09007922571921598\n&gt;&gt;&gt; empirique_poisson(10, 7, 10**6)\n0.090022\n</code></pre> On constate une similitude des valeurs renvoy\u00e9es. Cela prouve que la fonction Python <code>rd.poisson</code> est correctement impl\u00e9ment\u00e9e...</p> <p>Exercice  4</p> <p>d'apr\u00e8s BCE ESC 2020</p> <p>Un mobile se d\u00e9place sur les points \u00e0 coordonn\u00e9es enti\u00e8res positives d'un axe d'origine \\(O\\). Au d\u00e9part, le mobile est \u00e0 l'origine (point d'abscisse 0). Le mobile se d\u00e9place selon la r\u00e8gle suivante : s'il est sur le point d'abscisse \\(k-1\\) (\\(k \\in \\mathbb{N}^*\\)) \u00e0 l'instant \\(n\\) (\\(n \\in \\mathbb{N}\\)), alors, \u00e0 l'instant \\(n+1\\), il sera sur le point d'abscisse \\(k\\) avec la probabilit\u00e9 \\(\\frac{k}{k+1}\\), ou sur le point d'abscisse 0 avec la probabilit\u00e9 \\(\\frac{1}{k+1}\\).</p> <p>On note \\(U\\) l'instant auquel le mobile se trouve pour la premi\u00e8re fois \u00e0 l'origine (sans compter son positionnement de d\u00e9part) et on admet que \\(U\\) est une variable al\u00e9atoire. </p> <p>Compl\u00e9ter les commandes du script Python suivant afin qu'il calcule et affiche la valeur prise par \\(U\\) lors de l'exp\u00e9rience al\u00e9atoire \u00e9tudi\u00e9e.</p> <pre><code>import numpy as np\nimport numpy.random as rd\n\nk = 1\nhasard = rd.randint(1, k+2)\nwhile hasard &lt; ...:\n    k = k + 1\n    hasard = ...\n\nprint('U a pris la valeur', ...)\n</code></pre>"},{"location":"TD10/TD10/","title":"TD10 : retour du SQL, r\u00e9gression, simulations, suite et fin","text":""},{"location":"TD10/TD10/#1-entrainement-sql","title":"1. Entra\u00eenement SQL","text":"<p>Exercice  1</p> <p>Lien vers le cours de SQL</p> <p>Cr\u00e9ation de table</p> <p>On souhaite cr\u00e9er une table <code>tournoi</code> concernant les joueurs de rugby du tournoi des VI nations 2023 et leur nombre de points marqu\u00e9s.</p> <p>On veut que la table ait la structure suivante :</p> <ul> <li><code>id_joueur</code> : nombre unique identifiant un joueur (type <code>INT</code>)</li> <li><code>nom</code> : nom du joueur (type <code>TEXT</code> )</li> <li><code>pr\u00e9nom</code>  : pr\u00e9nom du joueur (type <code>TEXT</code> )</li> <li><code>\u00e9quipe</code>  : pr\u00e9nom du joueur (type <code>TEXT</code> )</li> <li><code>points</code> : nombre de points marqu\u00e9s (type <code>INT</code> )</li> </ul> <p>Q1. Quelle sera la cl\u00e9 primaire de cette table ?  </p> Correction Q1. <p>La cl\u00e9 primaire de cette table est <code>id_joueur</code> car c'est un attribut qui identifie de mani\u00e8re unique chaque joueur.</p> <p>Q2. \u00c9crire la requ\u00eate SQL permettant la cr\u00e9ation de cette table <code>tournoi</code>. </p> Votre code SQL : Ex\u00e9cuter Correction Q2. <pre><code>CREATE TABLE tournoi (\nid_joueur INTEGER PRIMARY KEY,\nnom TEXT,\npr\u00e9nom TEXT,\n\u00e9quipe TEXT,\npoints INTEGER\n);\n</code></pre> <p>Q3. Ins\u00e9rer dans cette table le joueur Finn Russell (Ecosse) qui a marqu\u00e9 32 points. On lui attribuera un <code>id_joueur</code> \u00e9gal \u00e0 1. </p> Votre code SQL : Ex\u00e9cuter <pre></pre> V\u00e9rifiez si la table a bien \u00e9t\u00e9 modifi\u00e9e : Ex\u00e9cuter <pre></pre> Correction Q3. <pre><code>INSERT INTO tournoi\nVALUES (1, \"Russel\", \"Finn\", \"Ecosse\", 32)\n</code></pre> <p>Q4. Afin de rajouter des joueurs dans cette table, copier-coller le code ci-dessous dans le champ SQL :</p> <pre><code>INSERT INTO tournoi\nVALUES (2, \"Damian\", \"Penaud\", \"France\", 25),\n(3, \"Tommaso\", \"Allan\", \"Italie\", 34),\n(4, \"Ross\", \"Byrne\", \"Irlande\", 16),\n(5, \"Thomas\", \"Ramos\", \"France\", 84),\n(6, \"Jonathan\", \"Sexton\", \"Irlande\", 35),\n(7, \"Blair\", \"Kinghorn\", \"Ecosse\", 26),\n(8, \"Owen\", \"Farrell\", \"Angleterre\", 28),\n(9, \"Huw\", \"Jones\", \"Ecosse\", 26);\n</code></pre> Votre code SQL : Ex\u00e9cuter <pre></pre> V\u00e9rifiez si la table a bien \u00e9t\u00e9 modifi\u00e9e : Ex\u00e9cuter <pre></pre> <p>Faire une requ\u00eate pour afficher uniquement le nom et le pr\u00e9nom des joueurs \u00e9cossais de cette table.</p> Votre code SQL : Ex\u00e9cuter <pre></pre> Correction Q4. <pre><code>SELECT nom, pr\u00e9nom\nFROM tournoi\nWHERE \u00e9quipe = \"Ecosse\"\n</code></pre> <p>Q5. (Hors-Programme) L'instruction <code>ORDER BY</code> permet de classer les enregistrements d'une table suivant l'ordre (alphab\u00e9tique, ou num\u00e9rique) d'un de ses attributs.</p> <p>Ainsi la requ\u00eate <pre><code>SELECT *\nFROM tournoi\nORDER BY nom ASC\n</code></pre></p> <p>va classer tous les joueurs par ordre alphab\u00e9tique de leur nom. Si on remplace le <code>ASC</code> (qui signifie ASCendant) par <code>DESC</code> (qui signifie DESCendant) on aurait l'ordre inverse.</p> <p>\u00c9tablir le classement des meilleurs marqueurs de points de ce tournoi 2023.  </p> Correction Q5. <pre><code>SELECT *\nFROM tournoi\nORDER BY points DESC\n</code></pre>"},{"location":"TD10/TD10/#2-retour-sur-la-regression-lineaire","title":"2. Retour sur la r\u00e9gression lin\u00e9aire","text":"<p>Coefficient de corr\u00e9lation lin\u00e9aire de deux variables al\u00e9atoires</p> <p> D\u00e9finition Le coefficient de corr\u00e9lation lin\u00e9aire de deux variables al\u00e9atoires \\(X\\) et \\(Y\\) est le r\u00e9el \\(\\rho(X,Y)\\) donn\u00e9 par la formule :</p> \\[\\rho(X,Y) = \\dfrac{Cov(X,Y)}{\\sqrt{V(X)}\\sqrt{V(Y)}}\\] <p> Interpr\u00e9tation </p> <ul> <li>Si \\(X\\) et \\(Y\\) sont ind\u00e9pendantes, alors \\(\\rho(X,Y) = 0\\)</li> <li>Si \\(X\\) et \\(Y\\) sont li\u00e9es par une combinaison lin\u00e9aire (ex : \\(Y = 3X+2\\)), alors \\(\\rho(X,Y) = \\pm 1\\)</li> </ul> <p> Utilisation en statistiques  Lorsque \\(\\rho\\) est proche de 1, on peut conjecturer que le ph\u00e9nom\u00e8ne observ\u00e9 est pr\u00e9dictible. Le trac\u00e9 de la droite de r\u00e9gression permet alors de faire des pr\u00e9visions.</p> <p>Syntaxe Python  </p> <p> Calcul du coefficient de corr\u00e9lation : <code>np.corrcoef(x,y)[0,1]</code></p> <p>Consid\u00e9rons le code suivant :</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nplt.clf()\n\nx = np.array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,\n       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49])\n\ny = np.array([ 0,  1,  7,  1,  4, 17,  7,  4, 18, 10, 11, 11, 16, 15, 19, 19, 20,\n       25, 33, 23, 26, 44, 27, 34, 35, 34, 32, 46, 32, 38, 44, 47, 43, 49,\n       41, 52, 40, 59, 55, 58, 69, 66, 67, 71, 71, 68, 76, 75, 71, 68])\n\ncoeff = np.corrcoef(x,y)[0,1]\n\nplt.scatter(x,y)\nprint(coeff)\n\nplt.show()\n</code></pre> <p>Le trac\u00e9 laisse appara\u00eetre une distribution des points qui semblent \u00eatre situ\u00e9s autour d'une droite. Ceci est confirm\u00e9 par le calcul du coefficient de corr\u00e9lation lin\u00e9aire ( calcul\u00e9 par l'instruction <code>np.corrcoef(x,y)[0,1]</code>  )</p> <p></p> <p> Calcul et trac\u00e9 du point moyen : <code>np.mean(x)</code></p> <p>La fonction <code>np.mean(x)</code> permet de calculer la valeur moyenne d'un ensemble de valeurs stock\u00e9es dans la variable <code>x</code>.</p> <p>Le point moyen d'une s\u00e9rie statistique double peut donc se tracer par : <pre><code>plt.plot([np.mean(x)], [np.mean(y)], 'r+') \n</code></pre></p> <p></p> <p> Trac\u00e9 de la droite de r\u00e9gression : <code>a, b = np.polyfit(x, y, 1)</code></p> <ul> <li>Le calcul du coefficient directeur <code>a</code> et de l'ordonn\u00e9e \u00e0 l'origine <code>b</code> de la droite de r\u00e9gression se fait par la commande </li> </ul> <p> <code>a, b = np.polyfit(x, y, 1)</code> </p> <ul> <li>Le trac\u00e9 de la droite se fait par <code>plt.plot(x, a*x + b)</code></li> </ul> <p>Ins\u00e9rer les lignes : <pre><code>a, b = np.polyfit(x, y, 1)\nplt.plot(x, a*x + b, 'g-')\n</code></pre> dans le code pr\u00e9c\u00e9dent. On obtient alors : </p> <p>Exercice  2</p> <p>D'apr\u00e8s un exercice d'Ana Karina Fermin Rodriguez</p> <p>On \u00e9tudie pour diff\u00e9rents pays le rapport entre le PIB par habitant et le taux de scolarisation (en pourcentage) des moins de 24 ans :</p> Pays PIB Taux de scolarisation Pays en d\u00e9veloppement 4775 63 Pays les plus pauvres 1350 45 Pays arabes 5680 62 Asie de l\u2019Est et Pacifique 5872 69 Am\u00e9rique latine et Cara\u00efbes 7964 81 Asie du Sud 3072 56 Afrique Sub-saharienne 1942 50 Europe centrale, orientale et CEI 8802 83 <p>Pour un pays ambitionnant d'avoir un PIB de 7000 $ par habitant, quel devrait \u00eatre le taux de scolarisation des moins de 24 ans ?</p> Correction <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\n\nplt.clf()\n\n\nx = np.array([4775, 1350, 5680, 5872, 7964, 3072, 1942, 8802])\ny = np.array([63, 45, 62, 69, 81, 56, 50, 83])\n\n\ncoeff = np.corrcoef(x, y)[0, 1]\n\nplt.scatter(x, y)\nprint(coeff)\n\na, b = np.polyfit(x, y, 1)\nplt.plot(x, a*x + b, 'g-')\n\n\nplt.show()\n</code></pre> <p></p> <pre><code>&gt;&gt;&gt; a\n0.004978235291745592\n&gt;&gt;&gt; b\n39.07172126169925\n&gt;&gt;&gt; a*7000+b\n73.91936830391839\n</code></pre> <p>On peut estimer \u00e0 74 % le taux n\u00e9cessaire de scolarisation des moins de 24 ans .</p>"},{"location":"TD10/TD10/#3-retour-sur-les-simulations","title":"3. Retour sur les simulations","text":"<p>  Syntaxe des lois usuelles  </p> <p>Rappel : on utilise les simulateurs de lois du module <code>random</code> de la biblioth\u00e8que <code>numpy</code>. Ceci n\u00e9cessite syst\u00e9matiquement la pr\u00e9sence des deux lignes suivantes au d\u00e9but de chaque script : <pre><code>import numpy as np\nimport numpy.random as rd   \n</code></pre></p> <ul> <li> <p> loi uniforme : </p> <ul> <li><code>rd.random()</code> renvoie un r\u00e9el dans \\([0;1]\\) qui suit une loi uniforme (chaque r\u00e9el a la m\u00eame probabilit\u00e9 d'apparition)</li> <li><code>rd.randint(a,b)</code> renvoie un entier dans \\([a;b[\\) qui suit une loi uniforme (chaque entier a la m\u00eame probabilit\u00e9 d'apparition). Attention, la valeur \\(b\\) n'est pas prise. Ce qui signifie que pour un tirage al\u00e9atoire uniforme de 0 et de 1, il faut utiliser l'expression <code>rd.randint(0,2)</code>.</li> </ul> </li> <li> <p> loi binomiale : <code>rd.binomial(n,p)</code> renvoie un entier qui suit une loi binomiale de param\u00e8tre \\((n,p)\\). (\\(n\\) r\u00e9p\u00e9titions d'une \u00e9preuve de Bernoulli de param\u00e8tre \\(p\\))</p> </li> <li> <p> loi g\u00e9om\u00e9trique : <code>rd.geometric(p)</code> renvoie un entier qui suit une loi g\u00e9om\u00e9trique de param\u00e8tre \\(p\\) (nombre d'exp\u00e9riences de Bernoulli de param\u00e8tre \\(p\\) avant l'apparition du premier succ\u00e8s)</p> </li> <li> <p> loi exponentielle : <code>rd.exponential(1/lambda)</code> renvoie un r\u00e9el qui suit une loi exponentielle de param\u00e8tre <code>lambda</code>.</p> </li> <li> <p> loi de Poisson : <code>rd.poisson(lambda)</code> renvoie un entier qui suit une loi de Poisson de param\u00e8tre <code>lambda</code>.</p> </li> <li> <p> loi normale : <code>rd.normal(mu, sigma)</code> renvoie un r\u00e9el qui suit une loi normale de moyenne <code>mu</code> et de variance <code>sigma</code>\\(^2\\).</p> </li> </ul> <p> Comment renvoyer un vecteur plut\u00f4t qu'une seule valeur unique ? Il suffit de rajouter le nombre de simulations d\u00e9sir\u00e9es comme dernier param\u00e8tre dans la parenth\u00e8se.</p> <p>Exemple : Pour simuler 10 tirages al\u00e9atoires de nombres \u00e9gaux \u00e0 0 ou \u00e0 1, on utilisera : <pre><code>&gt;&gt;&gt; X = rd.randint(0,2,10)\n&gt;&gt;&gt; X\narray([0, 1, 0, 0, 1, 0, 0, 0, 1, 1])\n</code></pre></p> <p>Pour conna\u00eetre la valeur du 5\u00e8me tirage, on appelera : <pre><code>&gt;&gt;&gt; X[4]\n1\n</code></pre>  Ne pas oublier qu'on commence \u00e0 indexer \u00e0 0, donc le 5\u00e8me \u00e9l\u00e9ment est l'\u00e9l\u00e9ment d'indice 4...</p> <p> Lien pour ouvrir une console Python dans un nouvel onglet (sous Chrome de pr\u00e9f\u00e9rence)</p> <p>Exercice  3</p> <p>Q1 \u00c9crire une fonction <code>tirage</code> qui renvoie un nombre entier entre 0 et 10 inclus, suivant une loi uniforme.</p> Correction Q1. <pre><code>import numpy.random as rd\n\ndef tirage():\n    return rd.randint(0,11)\n</code></pre> <p>Q2 \u00c9crire une fonction <code>moyenne_tirages</code> qui prend pour param\u00e8tre un entier <code>n</code> et qui renvoie la valeur moyenne de la fonction <code>tirage</code> sur <code>n</code> tirages.</p> Correction Q2. <pre><code>def moyenne_tirages(n):\n    s = 0\n    for _ in range(n):\n        s += tirage()\n    return s / n\n</code></pre> <p>Q3 Les instructions ci-dessous permettent de tracer l'histogramme des valeurs que prend <code>moyenne_tirages(5)</code> lorsqu'on la r\u00e9p\u00e8te 100 fois.</p> <pre><code>import numpy as np\nimport matplotlib.pyplot as plt\nimport numpy.random as rd\nfrom math import exp, sqrt\n\nplt.clf()\n\n\ndef tirage():\n    # votre fonction\n\ndef moyenne_tirages(n):\n    # votre fonction\n\nk = 7\nN = 10**2\nx = np.array([moyenne_tirages(k) for n in range(N)])\nplt.hist(x, np.linspace(0, 10, 100), density=True)\n\nplt.show()\n</code></pre> <p>Faire varier ces param\u00e8tres <code>k</code>  et <code>N</code> , et observer les changements. Quelle est la loi qui est illustr\u00e9e ici ?</p> Correction Q3. <p>Le param\u00e8tre <code>k</code> va influer sur l'\u00e9cart-type de la gaussienne. Plus le param\u00e8tre <code>N</code> sera grand, plus l'histogramme se rapprochera d'une gaussienne.</p> <p>Le th\u00e9or\u00e8me ici illustr\u00e9 est le Th\u00e9or\u00e8me Central Limite, </p> <p>Exercice  4</p> <p>d'apr\u00e8s BCE ESC 2020</p> <p>Un mobile se d\u00e9place sur les points \u00e0 coordonn\u00e9es enti\u00e8res positives d'un axe d'origine \\(O\\). Au d\u00e9part, le mobile est \u00e0 l'origine (point d'abscisse 0). Le mobile se d\u00e9place selon la r\u00e8gle suivante : s'il est sur le point d'abscisse \\(k-1\\) (\\(k \\in \\mathbb{N}^*\\)) \u00e0 l'instant \\(n\\) (\\(n \\in \\mathbb{N}\\)), alors, \u00e0 l'instant \\(n+1\\), il sera sur le point d'abscisse \\(k\\) avec la probabilit\u00e9 \\(\\frac{k}{k+1}\\), ou sur le point d'abscisse 0 avec la probabilit\u00e9 \\(\\frac{1}{k+1}\\).</p> <p>On note \\(U\\) l'instant auquel le mobile se trouve pour la premi\u00e8re fois \u00e0 l'origine (sans compter son positionnement de d\u00e9part) et on admet que \\(U\\) est une variable al\u00e9atoire. </p> <p>Compl\u00e9ter les commandes du script Python suivant afin qu'il calcule et affiche la valeur prise par \\(U\\) lors de l'exp\u00e9rience al\u00e9atoire \u00e9tudi\u00e9e.</p> <pre><code>import numpy as np\nimport numpy.random as rd\n\nk = 1\nhasard = rd.randint(1, k+2)\nwhile hasard &lt; ...:\n    k = k + 1\n    hasard = ...\n\nprint('U a pris la valeur', ...)\n</code></pre> Correction <pre><code>import numpy as np\nimport numpy.random as rd\n\nk = 1\nhasard = rd.randint(1, k+2)\nwhile hasard &lt; k+1:\nk = k + 1\nhasard = rd.randint(1, k+2)\nprint('U a pris la valeur', k)\n</code></pre> <p>Bonne chance \u00e0 tous !</p> <p></p>"}]}